/*
Autor: Jungbusch Softwareschmiede
Datum: 15.06.2021
Version: 0.3
Anmerkungen: Schritte 9.1.5, 9.2.5, 9.3.7 aktuell nicht funktional
Vorlage: CIS Microsoft Windows 10 Enterprise (Release 20H2 or older) Benchmark | v1.10.0 - 27-01-2021
*/

//
// Set global variables
//
{
	stepid: "0-DumpSecuritySettings"
	description: "Dump the current security-settings in a file."
	module: "DumpSecuritySettings"

	%g_dumpCreated% = %passed%
},
{
	stepid: "0-GetGuestName"
	description: "Get the name of the local guest account."
	module: "GetAccountName"

	typ: "Guest"
	%g_guest% = %result%
},
{
	stepid: "0-GetCurrentUsername"
	description: "Get the name of the current local user."
	module: "GetAccountName"

	typ: "User"
	%g_user% = %result%
},
{
	stepid: "0-GetSIDOfCurrentUser"
	description: "Get the SID of the current local user."
	module: "GetUserSID"

	userName: "%g_user%"
	%g_userSID% = %result%
},

//
// Start audit process
//
{
	condition: if("%g_dumpCreated%")
	stepid: "1.1.1"
    desc: "Ensure 'Enforce password history' is set to '24 or more password(s)' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "PasswordHistorySize"
	passed: if("%result% >= '24'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "1.1.2"
    desc: "Ensure 'Maximum password age' is set to '60 or fewer days, but not 0' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "MaximumPasswordAge"
	passed: if("'0' < %result% && %result% <= '60'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "1.1.3"
    desc: "Ensure 'Minimum password age' is set to '1 or more day(s)' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "MinimumPasswordAge"
	passed: if("%result% >= '1'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "1.1.4"
    desc: "Ensure 'Minimum password length' is set to '14 or more character(s)' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "MinimumPasswordLength"
	passed: if("%result% >= '14'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "1.1.5"
    desc: "Ensure 'Password must meet complexity requirements' is set to 'Enabled' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "PasswordComplexity"
	passed: if("%result% == '1'")
},

// 1.1.6 is non existent, because the Value could only be observed by using SYSTEM rights.

{
	condition: if("%g_dumpCreated%")
	stepid: "1.1.7"
    desc: "Ensure 'Store passwords using reversible encryption' is set to 'Disabled' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "ClearTextPassword"
	passed: if("%result% == '0'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "1.2.1"
    desc: "Ensure 'Account lockout duration' is set to '15 or more minute(s)' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "LockoutDuration"
	passed: if("%result% >= '15'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "1.2.2"
    desc: "Ensure 'Account lockout threshold' is set to '10 or fewer invalid logonattempt(s), but not 0' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "LockoutBadCount"
	passed: if("'0' < %result% && %result% <= '10'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "1.2.3"
    desc: "Ensure 'Reset account lockout counter after' is set to '15 or more minute(s)' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "ResetLockoutCount"
	passed: if("%result% >= '15'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.1"
    desc: "Ensure 'Access Credential Manager as a trusted caller' is set to 'No One' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeTrustedCredManAccessPrivilege"
	passed: if("%result% == 'keyNonExistent'")
},
{
	condition: if("%g_dumpCreated%")
    stepid: "2.2.2"
    description: "Ensure 'Access this computer from the network' is set to 'Administrators, Remote Desktop Users' (Automated)"
    module: "Script"
    
	script: `
		function runModule() {
			params.valueName = "SeNetworkLogonRight";
			let current = SecuritySettingsQuery(params);

			let currentArr = current.result.split(",");
			let expectedArr = ["*S-1-5-32-544","*S-1-5-32-555"];

            if (currentArr.length !== expectedArr.length) {
				return newResult("false", current.result, null);
			}

			currentArr = currentArr.concat().sort();
			expectedArr = expectedArr.concat().sort();

			for (let i in currentArr) {
				if (currentArr[i] !== expectedArr[i]) {
					return newResult("false", current.result, null);
				}
			}
			return newResult("true", current.result, null);
		}
		runModule();
		`
    passed: if("%result%")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.3"
    desc: "Ensure 'Act as part of the operating system' is set to 'No One' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeTcbPrivilege "
	passed: if("%result% == 'keyNonExistent'")
},
{
	condition: if("%g_dumpCreated%")
    stepid: "2.2.4"
    description: "Ensure 'Adjust memory quotas for a process' is set to 'Administrators, LOCAL SERVICE, NETWORK SERVICE' (Automated)"
    module: "Script"
    
	script: `
		function runModule() {
			params.valueName = "SeIncreaseQuotaPrivilege";
			let current = SecuritySettingsQuery(params);

			let currentArr = current.result.split(",");
			let expectedArr = ["*S-1-5-32-544","*S-1-5-19","*S-1-5-20"];

            if (currentArr.length !== expectedArr.length) {
				return newResult("false", current.result, null);
			}

			currentArr = currentArr.concat().sort();
			expectedArr = expectedArr.concat().sort();

			for (let i in currentArr) {
				if (currentArr[i] !== expectedArr[i]) {
					return newResult("false", current.result, null);
				}
			}
			return newResult("true", current.result, null);
		}
		runModule();
		`
    passed: if("%result%")
},
{
	condition: if("%g_dumpCreated%")
    stepid: "2.2.5"
    description: "Ensure 'Allow log on locally' is set to 'Administrators, Users' (Automated)"
    module: "Script"
    
	script: `
		function runModule() {
			params.valueName = "SeInteractiveLogonRight";
			let current = SecuritySettingsQuery(params);

			let currentArr = current.result.split(",");
			let expectedArr = ["*S-1-5-32-544","*S-1-5-32-545"];

            if (currentArr.length !== expectedArr.length) {
				return newResult("false", current.result, null);
			}

			currentArr = currentArr.concat().sort();
			expectedArr = expectedArr.concat().sort();

			for (let i in currentArr) {
				if (currentArr[i] !== expectedArr[i]) {
					return newResult("false", current.result, null);
				}
			}
			return newResult("true", current.result, null);
		}
		runModule();
		`
    passed: if("%result%")
},
{
	condition: if("%g_dumpCreated%")
    stepid: "2.2.6"
    description: "Ensure 'Allow log on through Remote Desktop Services' is set to 'Administrators, Remote Desktop Users' (Automated)"
    module: "Script"
    
	script: `
		function runModule() {
			params.valueName = "SeRemoteInteractiveLogonRight";
			let current = SecuritySettingsQuery(params);

			let currentArr = current.result.split(",");
			let expectedArr = ["*S-1-5-32-544","*S-1-5-32-555"];

            if (currentArr.length !== expectedArr.length) {
				return newResult("false", current.result, null);
			}

			currentArr = currentArr.concat().sort();
			expectedArr = expectedArr.concat().sort();

			for (let i in currentArr) {
				if (currentArr[i] !== expectedArr[i]) {
					return newResult("false", current.result, null);
				}
			}
			return newResult("true", current.result, null);
		}
		runModule();
		`
    passed: if("%result%")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.7"
    desc: "Ensure 'Back up files and directories' is set to 'Administrators' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeBackupPrivilege "
	passed: if("%result% == '*S-1-5-32-544'")
},
{
	condition: if("%g_dumpCreated%")
    stepid: "2.2.8"
    description: "Ensure 'Change the system time' is set to 'Administrators, LOCALSERVICE' (Automated)"
    module: "Script"
    
	script: `
		function runModule() {
			params.valueName = "SeSystemtimePrivilege";
			let current = SecuritySettingsQuery(params);

			let currentArr = current.result.split(",");
			let expectedArr = ["*S-1-5-32-544","*S-1-5-19"];

            if (currentArr.length !== expectedArr.length) {
				return newResult("false", current.result, null);
			}

			currentArr = currentArr.concat().sort();
			expectedArr = expectedArr.concat().sort();

			for (let i in currentArr) {
				if (currentArr[i] !== expectedArr[i]) {
					return newResult("false", current.result, null);
				}
			}
			return newResult("true", current.result, null);
		}
		runModule();
		`
    passed: if("%result%")
},
{
	condition: if("%g_dumpCreated%")
    stepid: "2.2.9"
    description: "Ensure 'Change the time zone' is set to 'Administrators, LOCALSERVICE, Users' (Automated)"
    module: "Script"
    
	script: `
		function runModule() {
			params.valueName = "SeTimeZonePrivilege";
			let current = SecuritySettingsQuery(params);

			let currentArr = current.result.split(",");
			let expectedArr = ["*S-1-5-32-544","*S-1-5-19","*S-1-5-32-545"];

            if (currentArr.length !== expectedArr.length) {
				return newResult("false", current.result, null);
			}

			currentArr = currentArr.concat().sort();
			expectedArr = expectedArr.concat().sort();

			for (let i in currentArr) {
				if (currentArr[i] !== expectedArr[i]) {
					return newResult("false", current.result, null);
				}
			}
			return newResult("true", current.result, null);
		}
		runModule();
		`
    passed: if("%result%")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.10"
    desc: "Ensure 'Create a pagefile' is set to 'Administrators' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeCreatePagefilePrivilege"
	passed: if("%result% == '*S-1-5-32-544'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.11"
    desc: "Ensure 'Create a token object' is set to 'No One' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeCreateTokenPrivilege "
	passed: if("%result% == 'keyNonExistent'")
},
{
	condition: if("%g_dumpCreated%")
    stepid: "2.2.12"
    description: "Ensure 'Create global objects' is set to 'Administrators, LOCALSERVICE, NETWORK SERVICE, SERVICE' (Automated)"
    module: "Script"
    
	script: `
		function runModule() {
			params.valueName = "SeCreateGlobalPrivilege";
			let current = SecuritySettingsQuery(params);

			let currentArr = current.result.split(",");
			let expectedArr = ["*S-1-5-32-544","*S-1-5-19","*S-1-5-20","*S-1-5-6"];

            if (currentArr.length !== expectedArr.length) {
				return newResult("false", current.result, null);
			}

			currentArr = currentArr.concat().sort();
			expectedArr = expectedArr.concat().sort();

			for (let i in currentArr) {
				if (currentArr[i] !== expectedArr[i]) {
					return newResult("false", current.result, null);
				}
			}
			return newResult("true", current.result, null);
		}
		runModule();
		`
    passed: if("%result%")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.13"
    desc: "Ensure 'Create permanent shared objects' is set to 'No One' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeCreatePermanentPrivilege"
	passed: if("%result% == 'keyNonExistent'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.14"
    desc: "Configure 'Create symbolic links' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeCreateSymbolicLinkPrivilege"
	passed: if("%result%.includes('*S-1-5-32-544') || %result%.includes('*S-1-5-83-0')")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.15"
    desc: "Ensure 'Debug programs' is set to 'Administrators' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeDebugPrivilege"
	passed: if("%result% == '*S-1-5-32-544'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.16"
    desc: "Ensure 'Deny access to this computer from the network' to include 'Guests, Local account' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeDenyNetworkLogonRight"
	passed: if("%result%.includes('%g_guest%') && %result%.includes('%g_user%')")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.17"
    desc: "Ensure 'Deny log on as a batch job' to include 'Guests' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeDenyBatchLogonRight"
	passed: if("%result%.includes('%g_guest%')")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.18"
    desc: "Ensure 'Deny log on as a service' to include 'Guests' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeDenyServiceLogonRight"
	passed: if("%result%.includes('%g_guest%')")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.19"
    desc: "Ensure 'Deny log on locally' to include 'Guests' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeDenyInteractiveLogonRight"
	passed: if("%result%.includes('%g_guest%')")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.20"
    desc: "Ensure 'Deny log on through Remote Desktop Services' to include 'Guests, Local account' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeDenyRemoteInteractiveLogonRight"
	passed: if("%result%.includes('%g_guest%') && %result%.includes('%g_user%')")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.21"
    desc: "Ensure 'Enable computer and user accounts to be trusted for delegation' is set to 'No One' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeEnableDelegationPrivilege"
	passed: if("%result% == 'keyNonExistent'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.22"
    desc: "Ensure 'Force shutdown from a remote system' is set to 'Administrators' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeRemoteShutdownPrivilege"
	passed: if("%result% == '*S-1-5-32-544'")
},
{
	condition: if("%g_dumpCreated%")
    stepid: "2.2.23"
    description: "Ensure 'Generate security audits' is set to 'LOCAL SERVICE, NETWORKSERVICE' (Automated)"
    module: "Script"
    
	script: `
		function runModule() {
			params.valueName = "SeAuditPrivilege";
			let current = SecuritySettingsQuery(params);

			let currentArr = current.result.split(",");
			let expectedArr = ["*S-1-5-19","*S-1-5-20"];

            if (currentArr.length !== expectedArr.length) {
				return newResult("false", current.result, null);
			}

			currentArr = currentArr.concat().sort();
			expectedArr = expectedArr.concat().sort();

			for (let i in currentArr) {
				if (currentArr[i] !== expectedArr[i]) {
					return newResult("false", current.result, null);
				}
			}
			return newResult("true", current.result, null);
		}
		runModule();
		`
    passed: if("%result%")
},
{
	condition: if("%g_dumpCreated%")
    stepid: "2.2.24"
    description: "Ensure 'Impersonate a client after authentication' is set to 'Administrators, LOCAL SERVICE, NETWORK SERVICE, SERVICE' (Automated)"
    module: "Script"
    
	script: `
		function runModule() {
			params.valueName = "SeImpersonatePrivilege";
			let current = SecuritySettingsQuery(params);

			let currentArr = current.result.split(",");
			let expectedArr = ["*S-1-5-32-544","*S-1-5-19","*S-1-5-20","*S-1-5-6"];

            if (currentArr.length !== expectedArr.length) {
				return newResult("false", current.result, null);
			}

			currentArr = currentArr.concat().sort();
			expectedArr = expectedArr.concat().sort();

			for (let i in currentArr) {
				if (currentArr[i] !== expectedArr[i]) {
					return newResult("false", current.result, null);
				}
			}
			return newResult("true", current.result, null);
		}
		runModule();
		`
    passed: if("%result%")
},
{
	condition: if("%g_dumpCreated%")
    stepid: "2.2.25"
    description: "Ensure 'Increase scheduling priority' is set to 'Administrators, Window Manager\Window Manager Group' (Automated)"
    module: "Script"
    
	script: `
		function runModule() {
			params.valueName = "SeIncreaseBasePriorityPrivilege";
			let current = SecuritySettingsQuery(params);

			let currentArr = current.result.split(",");
			let expectedArr = ["*S-1-5-32-544","*S-1-5-90-0"];

            if (currentArr.length !== expectedArr.length) {
				return newResult("false", current.result, null);
			}

			currentArr = currentArr.concat().sort();
			expectedArr = expectedArr.concat().sort();

			for (let i in currentArr) {
				if (currentArr[i] !== expectedArr[i]) {
					return newResult("false", current.result, null);
				}
			}
			return newResult("true", current.result, null);
		}
		runModule();
		`
    passed: if("%result%")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.26"
    desc: "Ensure 'Load and unload device drivers' is set to 'Administrators' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeLoadDriverPrivilege"
	passed: if("%result% == '*S-1-5-32-544'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.27"
    desc: "Ensure 'Lock pages in memory' is set to 'No One' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeLockMemoryPrivilege"
	passed: if("%result% == 'keyNonExistent'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.28"
    desc: "Ensure 'Log on as a batch job' is set to 'Administrators' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeBatchLogonRight"
	passed: if("%result% == '*S-1-5-32-544'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.29"
    desc: "Configure 'Log on as a service' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeServiceLogonRight"
	passed: if("%result% == '*S-1-5-83-0'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.30"
    desc: "Ensure 'Manage auditing and security log' is set to 'Administrators' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeSecurityPrivilege"
	passed: if("%result% == '*S-1-5-32-544'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.31"
    desc: "Ensure 'Modify an object label' is set to 'No One' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeRelabelPrivilege"
	passed: if("%result% == 'keyNonExistent'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.32"
    desc: "Ensure 'Modify firmware environment values' is set to 'Administrators' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeSystemEnvironmentPrivilege"
	passed: if("%result% == '*S-1-5-32-544'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.33"
    desc: "Ensure 'Perform volume maintenance tasks' is set to 'Administrators' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeManageVolumePrivilege"
	passed: if("%result% == '*S-1-5-32-544'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.34"
    desc: "Ensure 'Profile single process' is set to 'Administrators' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeProfileSingleProcessPrivilege"
	passed: if("%result% == '*S-1-5-32-544'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.35"
    desc: "Ensure 'Profile system performance' is set to 'Administrators, NTSERVICE\WdiServiceHost' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeSystemProfilePrivilege"
	passed: if("%result% == '*S-1-5-80-3139157870-2983391045-3678747466-658725712-1809340420'")
},
{
	condition: if("%g_dumpCreated%")
    stepid: "2.2.36"
    description: "Ensure 'Replace a process level token' is set to 'LOCAL SERVICE, NETWORK SERVICE' (Automated)"
    module: "Script"
    
	script: `
		function runModule() {
			params.valueName = "SeShutdownPrivilege";
			let current = SecuritySettingsQuery(params);

			let currentArr = current.result.split(",");
			let expectedArr = ["NT AUTHORITY\NETWORK SERVICE","NT AUTHORITY\LOCAL SERVICE"];

            if (currentArr.length !== expectedArr.length) {
				return newResult("false", current.result, null);
			}

			currentArr = currentArr.concat().sort();
			expectedArr = expectedArr.concat().sort();

			for (let i in currentArr) {
				if (currentArr[i] !== expectedArr[i]) {
					return newResult("false", current.result, null);
				}
			}
			return newResult("true", current.result, null);
		}
		runModule();
		`
    passed: if("%result%")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.37"
    desc: "Ensure 'Restore files and directories' is set to 'Administrators' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeRestorePrivilege"
	passed: if("%result% == '*S-1-5-32-544'")
},
{
	condition: if("%g_dumpCreated%")
    stepid: "2.2.38"
    description: "Ensure 'Shut down the system' is set to 'Administrators, Users' (Automated)"
    module: "Script"
    
	script: `
		function runModule() {
			params.valueName = "SeShutdownPrivilege";
			let current = SecuritySettingsQuery(params);

			let currentArr = current.result.split(",");
			let expectedArr = ["*S-1-5-32-544","*S-1-5-32-545"];

            if (currentArr.length !== expectedArr.length) {
				return newResult("false", current.result, null);
			}

			currentArr = currentArr.concat().sort();
			expectedArr = expectedArr.concat().sort();

			for (let i in currentArr) {
				if (currentArr[i] !== expectedArr[i]) {
					return newResult("false", current.result, null);
				}
			}
			return newResult("true", current.result, null);
		}
		runModule();
		`
    passed: if("%result%")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.2.39"
    desc: "Ensure 'Take ownership of files or other objects' is set to 'Administrators' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "SeTakeOwnershipPrivilege"
	passed: if("%result% == '*S-1-5-32-544'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.3.1.1"
    desc: "Ensure 'Accounts: Administrator account status' is set to 'Disabled' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "EnableAdminAccount"
	passed: if("%result% == '0'")
},
{
	stepid: "2.3.1.2"
    desc: "Ensure 'Accounts: Block Microsoft accounts' is set to 'Users can't add or log on with Microsoft accounts' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
	value: "NoConnectedUser"
	passed: if("%result% == '3'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.3.1.3"
    desc: "Ensure 'Accounts: Guest account status' is set to 'Disabled' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "EnableGuestAccount "
	passed: if("%result% == '0'")
},
{
	stepid: "2.3.1.4"
    desc: "Ensure 'Accounts: Limit local account use of blank passwords to console logon only' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa"
	value: "LimitBlankPasswordUse"
	passed: if("%result% == '1'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.3.1.5"
    desc: "Configure 'Accounts: Rename administrator account' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "NewAdministratorName"
	passed: if("%result% != 'Administrator'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.3.1.6"
    desc: "Configure 'Accounts: Rename guest account' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "NewGuestName"
	passed: if("%result% != 'Guest' || %result% != 'Gast'")
},
{
	stepid: "2.3.2.1"
    desc: "Ensure 'Audit: Force audit policy subcategory settings (Windows Vista or later) to override audit policy category settings' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa"
	value: "SCENoApplyLegacyAuditPolicy"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.2.2"
    desc: "Ensure 'Audit: Shut down system immediately if unable to logsecurity audits' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa"
	value: "CrashOnAuditFail"
	passed: if("%result% == '0'")
},
{
	stepid: "2.3.4.1"
    desc: "Ensure 'Devices: Allowed to format and eject removable media' is set to 'Administrators and Interactive Users' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon"
	value: "AllocateDASD"
	passed: if("%result% == '2'")
},
{
	stepid: "2.3.4.2"
    desc: "Ensure 'Devices: Prevent users from installing printer drivers' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Print\Providers\LanMan Print Services\Servers"
	value: "AddPrinterDrivers"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.6.1"
    desc: "Ensure 'Domain member: Digitally encrypt or sign secure channel data (always)' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters"
	value: "RequireSignOrSeal"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.6.2"
    desc: "Ensure 'Domain member: Digitally encrypt secure channel data (when possible)' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters"
	value: "SealSecureChannel"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.6.3"
    desc: "Ensure 'Domain member: Digitally sign secure channel data (when possible)' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters"
	value: "SignSecureChannel"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.6.4"
    desc: "Ensure 'Domain member: Disable machine account passwordchanges' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters"
	value: "DisablePasswordChange"
	passed: if("%result% == '0'")
},
{
	stepid: "2.3.6.5"
    desc: "Ensure 'Domain member: Maximum machine account password age' is set to '30 or fewer days, but not 0' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\Netlogon\Parameters"
	value: "MaximumPasswordAge"
	passed: if("'0' < %result% && %result% <= '30'")
},
{
	stepid: "2.3.6.6"
    desc: "Ensure 'Domain member: Require strong (Windows 2000 or later) session key' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters"
	value: "RequireStrongKey"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.7.1"
    desc: "Ensure 'Interactive logon: Do not require CTRL+ALT+DEL' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
	value: "DisableCAD"
	passed: if("%result% == '0'")
},
{
	stepid: "2.3.7.2"
    desc: "Ensure 'Interactive logon: Don't display last signed-in' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
	value: "DontDisplayLastUserName"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.7.3"
    desc: "Ensure 'Interactive logon: Machine account lockout threshold' is set to '10 or fewer invalid logon attempts, but not 0' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
	value: "MaxDevicePasswordFailedAttempts"
	passed: if("'0' < %result% && %result% <= '10'")
},
{
	stepid: "2.3.7.4"
    desc: "Ensure 'Interactive logon: Machine inactivity limit' is set to '900 or fewer second(s), but not 0' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
	value: "InactivityTimeoutSecs"
	passed: if("'0' < %result% && %result% <= '900'")
},
{
	stepid: "2.3.7.5"
    desc: "Configure 'Interactive logon: Message text for users attempting to logon' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
	value: "LegalNoticeText"
	passed: if("%result% != 'null'")
},
{
	stepid: "2.3.7.6"
    desc: "Configure 'Interactive logon: Message title for users attempting to logon' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
	value: "LegalNoticeCaption"
	passed: if("%result% != 'null'")
},
{
	stepid: "2.3.7.7"
    desc: "Ensure 'Interactive logon: Number of previous logons to cache (incase domain controller is not available)' is set to '4 or fewer logon(s)' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon"
	value: "CachedLogonsCount"
	passed: if("%result% <= '4'")
},
{
	stepid: "2.3.7.8"
    desc: "Ensure 'Interactive logon: Prompt user to change password before expiration' is set to 'between 5 and 14 days' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon"
	value: "PasswordExpiryWarning"
	passed: if("'5' <= %result% && %result% <= '14'")
},
{
	stepid: "2.3.7.9"
    desc: "Ensure 'Interactive logon: Smart card removal behavior' is set to 'Lock Workstation' or higher (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon"
	value: "ScRemoveOption"
	passed: if("%result% == '1' || %result% == '2' || %result% == '3'")
},
{
	stepid: "2.3.8.1"
    desc: "Ensure 'Microsoft network client: Digitally sign communications (always)' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters"
	value: "RequireSecuritySignature"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.8.2"
    desc: "Ensure 'Microsoft network client: Digitally sign communications (if server agrees)' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters"
	value: "EnableSecuritySignature"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.8.3"
    desc: "Ensure 'Microsoft network client: Send unencrypted password to third-party SMB servers' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters"
	value: "EnablePlainTextPassword"
	passed: if("%result% == '0'")
},
{
	stepid: "2.3.9.1"
    desc: "Ensure 'Microsoft network server: Amount of idle time required before suspending session' is set to '15 or fewer minute(s)' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters"
	value: "AutoDisconnect"
	passed: if("%result% <= '15'")
},
{
	stepid: "2.3.9.2"
    desc: "Ensure 'Microsoft network server: Digitally sign communications (always)' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters"
	value: "RequireSecuritySignature"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.9.3"
    desc: "Ensure 'Microsoft network server: Digitally sign communications (if client agrees)' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters"
	value: "EnableSecuritySignature"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.9.4"
    desc: "Ensure 'Microsoft network server: Disconnect clients when logon hours expire' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters"
	value: "EnableForcedLogoff"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.9.5"
    desc: "Ensure 'Microsoft network server: Server SPN target name validationlevel' is set to 'Accept if provided by client' or higher (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters"
	value: "SMBServerNameHardeningLevel"
	passed: if("%result% == '1' || %result% == '2'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.3.10.1"
    desc: "Ensure 'Network access: Allow anonymous SID/Name translation' is set to 'Disabled' (Automated)"
    module: "SecuritySettingsQuery"

	valueName: "LSAAnonymousNameLookup "
	passed: if("%result% == '0'")
},
{
	stepid: "2.3.10.2"
    desc: "Ensure 'Network access: Do not allow anonymous enumeration of SAM accounts' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa"
	value: "RestrictAnonymousSAM"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.10.3"
    desc: "Ensure 'Network access: Do not allow anonymous enumeration of SAM accounts and shares' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa"
	value: "RestrictAnonymous"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.10.4"
    desc: "Ensure 'Network access: Do not allow storage of passwords and credentials for network authentication' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa"
	value: "DisableDomainCreds"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.10.5"
    desc: "Ensure 'Network access: Let Everyone permissions apply to anonymous users' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa"
	value: "EveryoneIncludesAnonymous"
	passed: if("%result% == '0'")
},
{
	stepid: "2.3.10.6"
    desc: "Ensure 'Network access: Named Pipes that can be accessed anonymously' is set to 'None' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters"
	value: "NullSessionPipes"
	passed: if("%result% == 'null'")
},
{
    stepid: "2.3.10.7"
    description: "Ensure 'Network access: Remotely accessible registry paths' is configured (Automated)"
    module: "Script"

	script: `
		function runModule() {
			params.key = "HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\SecurePipeServers\\Winreg\\AllowedExactPaths";
			params.value = "Machine";
			let current = RegistryQuery(params);

			let currentRes = current.result;
			if (currentRes.slice(-1) == ",") {
				currentRes = currentRes.slice(0, -1);
			}

			let currentArr = currentRes.split(",");
			let expectedArr = ["System\\CurrentControlSet\\Control\\ProductOptions","System\\CurrentControlSet\\Control\\Server Applications","SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"];

            if (currentArr.length !== expectedArr.length) {
				return newResult("false", current.result, null);
			}

			currentArr = currentArr.concat().sort();
			expectedArr = expectedArr.concat().sort();

			for (let i in currentArr) {
				if (currentArr[i] !== expectedArr[i]) {
					return newResult("false", current.result, null);
				}
			}
			return newResult("true", current.result, null);
		}
		runModule();
		`
    passed: if("%result%")
},
{
    stepid: "2.3.10.8"
    description: "Ensure 'Network access: Remotely accessible registry paths and subpaths' is configured (Automated)"
    module: "Script"

	script: `
		function runModule() {
			params.key = "HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\SecurePipeServers\\Winreg\\AllowedPaths";
			params.value = "Machine";
			let current = RegistryQuery(params);

			let currentRes = current.result;
			if (currentRes.slice(-1) == ",") {
				currentRes = currentRes.slice(0, -1);
			}

			let currentArr = currentRes.split(",");
			let expectedArr = ["System\\CurrentControlSet\\Control\\Print\\Printers","System\\CurrentControlSet\\Services\\Eventlog","SOFTWARE\\Microsoft\\OLAP Server","SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Print","SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows","System\\CurrentControlSet\\Control\\ContentIndex","System\\CurrentControlSet\\Control\\Terminal Server","System\\CurrentControlSet\\Control\\Terminal Server\\UserConfig","System\\CurrentControlSet\\Control\\Terminal Server\\DefaultUserConfiguration","SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Perflib","System\\CurrentControlSet\\Services\\SysmonLog"];

            if (currentArr.length !== expectedArr.length) {
				return newResult("false", current.result, null);
			}

			currentArr = currentArr.concat().sort();
			expectedArr = expectedArr.concat().sort();

			for (let i in currentArr) {
				if (currentArr[i] !== expectedArr[i]) {
					return newResult("false", current.result, null);
				}
			}
			return newResult("true", current.result, null);
		}
		runModule();
		`
    passed: if("%result%")
},
{
	stepid: "2.3.10.9"
    desc: "Ensure 'Network access: Restrict anonymous access to Named Pipes and Shares' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters"
	value: "RestrictNullSessAccess"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.10.10"
    desc: "Ensure 'Network access: Restrict clients allowed to make remote calls to SAM' is set to 'Administrators: Remote Access: Allow' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa"
	value: "restrictremotesam"
	passed: if("%result% == 'O:BAG:BAD:(A;;RC;;;BA)'")
},
{
	stepid: "2.3.10.11"
    desc: "Ensure 'Network access: Shares that can be accessed anonymously' is set to 'None' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters"
	value: "NullSessionShares"
	passed: if("%result% == 'null'")
},
{
	stepid: "2.3.10.12"
    desc: "Ensure 'Network access: Sharing and security model for local accounts' is set to 'Classic - local users authenticate as themselves' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa"
	value: "ForceGuest"
	passed: if("%result% == '0'")
},
{
	stepid: "2.3.11.1"
    desc: "Ensure 'Network security: Allow Local System to use computer identity for NTLM' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa"
	value: "UseMachineId"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.11.2"
    desc: "Ensure 'Network security: Allow LocalSystem NULL session fallback' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0"
	value: "AllowNullSessionFallback"
	passed: if("%result% == '0'")
},
{
	stepid: "2.3.11.3"
    desc: "Ensure 'Network Security: Allow PKU2U authentication requests to this computer to use online identities' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\pku2u"
	value: "AllowOnlineID"
	passed: if("%result% == '0'")
},
{
	stepid: "2.3.11.4"
    desc: "Ensure 'Network security: Configure encryption types allowed for Kerberos' is set to 'AES128_HMAC_SHA1, AES256_HMAC_SHA1, Futureencryption types' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\Kerberos\Parameters"
	value: "SupportedEncryptionTypes"
	passed: if("%result% == '2147483640'")
},
{
	stepid: "2.3.11.5"
    desc: "Ensure 'Network security: Do not store LAN Manager hash value on next password change' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa"
	value: "NoLMHash"
	passed: if("%result% == '1'")
},
{
	condition: if("%g_dumpCreated%")
	stepid: "2.3.11.6"
    desc: "Ensure 'Network security: Force logoff when logon hours expire' is set to 'Enabled' (Manual)"
    module: "SecuritySettingsQuery"

	valueName: "ForceLogoffWhenHourExpire "
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.11.7"
    desc: "Ensure 'Network security: LAN Manager authentication level' is set to 'Send NTLMv2 response only. Refuse LM & NTLM' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa"
	value: "LmCompatibilityLevel"
	passed: if("%result% == '5'")
},
{
	stepid: "2.3.11.8"
    desc: "Ensure 'Network security: LDAP client signing requirements' is set to 'Negotiate signing' or higher (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LDAP"
	value: "LDAPClientIntegrity"
	passed: if("%result% == '1' || %result% == '2'")
},
{
	stepid: "2.3.11.9"
    desc: "Ensure 'Network security: Minimum session security for NTLM SSPbased (including secure RPC) clients' is set to 'Require NTLMv2 session security,Require 128-bit encryption' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0"
	value: "NTLMMinClientSec"
	passed: if("%result% == '537395200'")
},
{
	stepid: "2.3.11.10"
    desc: "Ensure 'Network security: Minimum session security for NTLM SSPbased (including secure RPC) servers' is set to 'Require NTLMv2 session security,Require 128-bit encryption' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0"
	value: "NTLMMinServerSec"
	passed: if("%result% == '537395200'")
},
{
	stepid: "2.3.14.1"
    desc: "Ensure 'System cryptography: Force strong key protection for userkeys stored on the computer' is set to 'User is prompted when the key is firstused' or higher (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Cryptography"
	value: "ForceKeyProtection"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.15.1"
    desc: "Ensure 'System objects: Require case insensitivity for non-Windows subsystems' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Kernel"
	value: "ObCaseInsensitive"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.15.2"
    desc: "Ensure 'System objects: Strengthen default permissions of internal system objects (e.g. Symbolic Links)' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager"
	value: "ProtectionMode"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.17.1"
    desc: "Ensure 'User Account Control: Admin Approval Mode for the Built-in Administrator account' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
	value: "FilterAdministratorToken"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.17.2"
    desc: "Ensure 'User Account Control: Behavior of the elevation prompt for administrators in Admin Approval Mode' is set to 'Prompt for consent on thesecure desktop' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
	value: "ConsentPromptBehaviorAdmin"
	passed: if("%result% == '2'")
},
{
	stepid: "2.3.17.3"
    desc: "Ensure 'User Account Control: Behavior of the elevation prompt for standard users' is set to 'Automatically deny elevation requests' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
	value: "ConsentPromptBehaviorUser"
	passed: if("%result% == '0'")
},
{
	stepid: "2.3.17.4"
    desc: "Ensure 'User Account Control: Detect application installations and prompt for elevation' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
	value: "EnableInstallerDetection"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.17.5"
    desc: "Ensure 'User Account Control: Only elevate UIAccess applications that are installed in secure locations' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
	value: "EnableSecureUIAPaths"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.17.6"
    desc: "Ensure 'User Account Control: Run all administrators in Admin Approval Mode' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
	value: "EnableLUA"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.17.7"
    desc: "Ensure 'User Account Control: Switch to the secure desktop when prompting for elevation' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
	value: "PromptOnSecureDesktop"
	passed: if("%result% == '1'")
},
{
	stepid: "2.3.17.8"
    desc: "Ensure 'User Account Control: Virtualize file and registry write failures to per-user locations' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
	value: "EnableVirtualization"
	passed: if("%result% == '1'")
},
{
	stepid: "5.1"
    desc: "Ensure 'Bluetooth Audio Gateway Service (BTAGService)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\BTAGService"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.2"
    desc: "Ensure 'Bluetooth Support Service (bthserv)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\bthserv"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.3"
    desc: "Ensure 'Computer Browser (Browser)' is set to 'Disabled' or 'Not Installed' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Browser"
	value: "Start"
	passed: if("%result% == 4 || %result% == 'keyNonExistent'")
},
{
	stepid: "5.4"
    desc: "Ensure 'Downloaded Maps Manager (MapsBroker)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\MapsBroker"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.5"
    desc: "Ensure 'Geolocation Service (lfsvc)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\lfsvc"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.6"
    desc: "Ensure 'IIS Admin Service (IISADMIN)' is set to 'Disabled' or 'Not Installed' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\IISADMIN"
	value: "Start"
	passed: if("%result% == 4 || %result% == 'keyNonExistent'")
},
{
	stepid: "5.7"
    desc: "Ensure 'Infrared monitor service (irmon)' is set to 'Disabled' or 'Not Installed' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\irmon"
	value: "Start"
	passed: if("%result% == 4 || %result% == 'keyNonExistent'")
},
{
	stepid: "5.8"
    desc: "Ensure 'Internet Connection Sharing (ICS) (SharedAccess)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SharedAccess"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.9"
    desc: "Ensure 'Link-Layer Topology Discovery Mapper (lltdsvc)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\lltdsvc"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.10"
    desc: "Ensure 'LxssManager (LxssManager)' is set to 'Disabled' or 'Not Installed' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LxssManager"
	value: "Start"
	passed: if("%result% == 4 || %result% == 'keyNonExistent'")
},
{
	stepid: "5.11"
    desc: "Ensure 'Microsoft FTP Service (FTPSVC)' is set to 'Disabled' or 'Not Installed' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\FTPSVC"
	value: "Start"
	passed: if("%result% == 4 || %result% == 'keyNonExistent'")
},
{
	stepid: "5.12"
    desc: "Ensure 'Microsoft iSCSI Initiator Service (MSiSCSI)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\MSiSCSI"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.13"
    desc: "Ensure 'OpenSSH SSH Server (sshd)' is set to 'Disabled' or 'Not Installed' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\sshd"
	value: "Start"
	passed: if("%result% == 4 || %result% == 'keyNonExistent'")
},
{
	stepid: "5.14"
    desc: "Ensure 'Peer Name Resolution Protocol (PNRPsvc)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\PNRPsvc"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.15"
    desc: "Ensure 'Peer Networking Grouping (p2psvc)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\p2psvc"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.16"
    desc: "Ensure 'Peer Networking Identity Manager (p2pimsvc)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\p2pimsvc"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.17"
    desc: "Ensure 'PNRP Machine Name Publication Service (PNRPAutoReg)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\PNRPAutoReg"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.18"
    desc: "Ensure 'Problem Reports and Solutions Control Panel Support(wercplsupport)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\wercplsupport"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.19"
    desc: "Ensure 'Remote Access Auto Connection Manager (RasAuto)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\RasAuto"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.20"
    desc: "Ensure 'Remote Desktop Configuration (SessionEnv)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SessionEnv"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.21"
    desc: "Ensure 'Remote Desktop Services (TermService)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\TermService"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.22"
    desc: "Ensure 'Remote Desktop Services UserMode Port Redirector(UmRdpService)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\UmRdpService"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.23"
    desc: "Ensure 'Remote Procedure Call (RPC) Locator (RpcLocator)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\RpcLocator"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.24"
    desc: "Ensure 'Remote Registry (RemoteRegistry)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\RemoteRegistry"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.25"
    desc: "Ensure 'Routing and Remote Access (RemoteAccess)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\RemoteAccess"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.26"
    desc: "Ensure 'Server (LanmanServer)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanmanServer"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.27"
    desc: "Ensure 'Simple TCP/IP Services (simptcp)' is set to 'Disabled' or 'Not Installed' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\simptcp"
	value: "Start"
	passed: if("%result% == 4 || %result% == 'keyNonExistent'")
},
{
	stepid: "5.28"
    desc: "Ensure 'SNMP Service (SNMP)' is set to 'Disabled' or 'Not Installed' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SNMP"
	value: "Start"
	passed: if("%result% == 4 || %result% == 'keyNonExistent'")
},
{
	stepid: "5.29"
    desc: "Ensure 'Special Administration Console Helper (sacsvr)' is set to 'Disabled' or 'Not Installed' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\sacsvr"
	value: "Start"
	passed: if("%result% == 4 || %result% == 'keyNonExistent'")
},
{
	stepid: "5.30"
    desc: "Ensure 'SSDP Discovery (SSDPSRV)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SSDPSRV"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.31"
    desc: "Ensure 'UPnP Device Host (upnphost)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\upnphost"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.32"
    desc: "Ensure 'Web Management Service (WMSvc)' is set to 'Disabled' or 'Not Installed' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\WMSvc"
	value: "Start"
	passed: if("%result% == 4 || %result% == 'keyNonExistent'")
},
{
	stepid: "5.33"
    desc: "Ensure 'Windows Error Reporting Service (WerSvc)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\WerSvc"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.34"
    desc: "Ensure 'Windows Event Collector (Wecsvc)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Wecsvc"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.35"
    desc: "Ensure 'Windows Media Player Network Sharing Service(WMPNetworkSvc)' is set to 'Disabled' or 'Not Installed' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\WMPNetworkSvc"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.36"
    desc: "Ensure 'Windows Mobile Hotspot Service (icssvc)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\icssvc"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.37"
    desc: "Ensure 'Windows Push Notifications System Service (WpnService)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\WpnService"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.38"
    desc: "Ensure 'Windows PushToInstall Service (PushToInstall)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\PushToInstall"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.39"
    desc: "Ensure 'Windows Remote Management (WS-Management) (WinRM)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\WinRM"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.40"
    desc: "Ensure 'World Wide Web Publishing Service (W3SVC)' is set to 'Disabled' or 'Not Installed' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\W3SVC"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.41"
    desc: "Ensure 'Xbox Accessory Management Service (XboxGipSvc)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\XboxGipSvc"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.42"
    desc: "Ensure 'Xbox Live Auth Manager (XblAuthManager)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\XblAuthManager"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.43"
    desc: "Ensure 'Xbox Live Game Save (XblGameSave)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\XblGameSave"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "5.44"
    desc: "Ensure 'Xbox Live Networking Service (XboxNetApiSvc)' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\XboxNetApiSvc"
	value: "Start"
	passed: if("%result% == '4'")
},
{
	stepid: "9.1.1"
    desc: "Ensure 'Windows Firewall: Domain: Firewall state' is set to 'On (recommended)' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile"
	value: "EnableFirewall"
	passed: if("%result% == '1'")
},
{
	stepid: "9.1.2"
    desc: "Ensure 'Windows Firewall: Domain: Inbound connections' is set to 'Block (default)' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile"
	value: "DefaultInboundAction"
	passed: if("%result% == '1'")
},
{
	stepid: "9.1.3"
    desc: "Ensure 'Windows Firewall: Domain: Outbound connections' is set to 'Allow (default)' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile"
	value: "DefaultOutboundAction"
	passed: if("%result% == '0'")
},
{
	stepid: "9.1.4"
    desc: "Ensure 'Windows Firewall: Domain: Settings: Display a notification' is set to 'No ' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile"
	value: "DisableNotifications"
	passed: if("%result% == '1'")
},

// Im moment noch nicht möglich wegen %SystemRoot%
/*
{
	stepid: "9.1.5"
    desc: "Ensure 'Windows Firewall: Domain: Logging: Name' is set to 'SystemRoot\System32\logfiles\firewall\domainfw.log' (Automated)"
    module: "RegistryQuery"

 	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging"
  	value: "LogFilePath"
	passed: if("%result% == '%SystemRoot%\System32\logfiles\firewall\domainfw.log'")
},
*/
{
	stepid: "9.1.6"
    desc: "Ensure 'Windows Firewall: Domain: Logging: Size limit (KB)' is set to '16,384 KB or greater' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging"
	value: "LogFileSize"
	passed: if("%result% >= '16384'")
},
{
	stepid: "9.1.7"
    desc: "Ensure 'Windows Firewall: Domain: Logging: Log dropped packets' is set to 'Yes' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging"
	value: "LogDroppedPackets"
	passed: if("%result% == '1'")
},
{
	stepid: "9.1.8"
    desc: "Ensure 'Windows Firewall: Domain: Logging: Log successful connections' is set to 'Yes' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging"
	value: "LogSuccessfulConnections"
	passed: if("%result% == '1'")
},
{
	stepid: "9.2.1"
    desc: "Ensure 'Windows Firewall: Private: Firewall state' is set to 'On (recommended)' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\PrivateProfile"
	value: "EnableFirewall"
	passed: if("%result% == '1'")
},
{
	stepid: "9.2.2"
    desc: "Ensure 'Windows Firewall: Private: Inbound connections' is set to 'Block (default)' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\PrivateProfile"
	value: "DefaultInboundAction"
	passed: if("%result% == '1'")
},
{
	stepid: "9.2.3"
    desc: "Ensure 'Windows Firewall: Private: Outbound connections' is set to 'Allow (default)' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\PrivateProfile"
	value: "DefaultOutboundAction"
	passed: if("%result% == '0'")
},
{
	stepid: "9.2.4"
    desc: "Ensure 'Windows Firewall: Private: Settings: Display a notification' is set to 'No ' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\PrivateProfile"
	value: "DisableNotifications"
	passed: if("%result% == '1'")
},

// Im moment noch nicht möglich wegen %SystemRoot%
/*
{
	stepid: "9.2.5"
    desc: "Ensure 'Windows Firewall: Private: Logging: Name' is set to 'SystemRoot\System32\logfiles\firewall\privatefw.log' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\PrivateProfile\Logging"
	value: "LogFilePath"
	passed: if("%result% == '%SystemRoot%\System32\logfiles\firewall\privatefw.log'")
},
*/
{
	stepid: "9.2.6"
    desc: "Ensure 'Windows Firewall: Private: Logging: Size limit (KB)' is set to '16,384 KB or greater' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\PrivateProfile\Logging"
	value: "LogFileSize"
	passed: if("%result% >= '16384'")
},
{
	stepid: "9.2.7"
    desc: "Ensure 'Windows Firewall: Private: Logging: Log dropped packets' is set to 'Yes' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\PrivateProfile\Logging"
	value: "LogDroppedPackets"
	passed: if("%result% == '1'")
},
{
	stepid: "9.2.8"
    desc: "Ensure 'Windows Firewall: Private: Logging: Log successful connections' is set to 'Yes' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\PrivateProfile\Logging"
	value: "LogSuccessfulConnections"
	passed: if("%result% == '1'")
},
{
	stepid: "9.3.1"
    desc: "Ensure 'Windows Firewall: Public: Firewall state' is set to 'On (recommended)' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\PublicProfile"
	value: "EnableFirewall"
	passed: if("%result% == '1'")
},
{
	stepid: "9.3.2"
    desc: "Ensure 'Windows Firewall: Public: Inbound connections' is set to 'Block(default)' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\PublicProfile"
	value: "DefaultInboundAction"
	passed: if("%result% == '1'")
},
{
	stepid: "9.3.3"
    desc: "Ensure 'Windows Firewall: Public: Outbound connections' is set to 'Allow (default)' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\PublicProfile"
	value: "DefaultOutboundAction"
	passed: if("%result% == '0'")
},
{
	stepid: "9.3.4"
    desc: "Ensure 'Windows Firewall: Public: Settings: Display a notification' is set to 'No ' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\PublicProfile"
	value: "DisableNotifications"
	passed: if("%result% == '1'")
},
{
	stepid: "9.3.5"
    desc: "Ensure 'Windows Firewall: Public: Settings: Apply local firewall rules' is set to 'No ' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\PublicProfile"
	value: "AllowLocalPolicyMerge"
	passed: if("%result% == '0'")
},
{
	stepid: "9.3.6"
    desc: "Ensure 'Windows Firewall: Public: Settings: Apply local connection security rules' is set to 'No ' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\PublicProfile"
	value: "AllowLocalIPsecPolicyMerge"
	passed: if("%result% == '0'")
},

// Im moment noch nicht möglich wegen %SystemRoot%
/*
{
	stepid: "9.3.7"
    desc: "Ensure 'Windows Firewall: Public: Logging: Name' is set to 'SystemRoot\System32\logfiles\firewall\publicfw.log' (Automated)"
    module: "RegistryQuery"

    key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\PublicProfile\Logging"
    value: "LogFilePath"
    passed: if("%result% == '%SystemRoot%\System32\logfiles\firewall\publicfw.log'")
},
*/
{
	stepid: "9.3.8"
    desc: "Ensure 'Windows Firewall: Public: Logging: Size limit (KB)' is set to '16,384 KB or greater' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\PublicProfile\Logging"
	value: "LogFileSize"
	passed: if("%result% >= '16384'")
},
{
	stepid: "9.3.9"
    desc: "Ensure 'Windows Firewall: Public: Logging: Log dropped packets' is set to 'Yes' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\PublicProfile\Logging"
	value: "LogDroppedPackets"
	passed: if("%result% == '1'")
},
{
	stepid: "9 03 2010"
    desc: "Ensure 'Windows Firewall: Public: Logging: Log successful connections' is set to 'Yes' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsFirewall\PublicProfile\Logging"
	value: "LogSuccessfulConnections"
	passed: if("%result% == '1'")
},
{
	stepid: "17.1.1"
    desc: "Ensure 'Audit Credential Validation' is set to 'Success and Failure' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE923F-69AE-11D9-BED3-505054503030}"
	passed: if("%result% == 'Success and Failure' || %result% == 'Erfolg und Fehler'")
},
{
	stepid: "17.2.1"
    desc: "Ensure 'Audit Application Group Management' is set to 'Success and Failure' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE9239-69AE-11D9-BED3-505054503030}"
	passed: if("%result% == 'Success and Failure' || %result% == 'Erfolg und Fehler'")
},
{
	stepid: "17.2.2"
    desc: "Ensure 'Audit Security Group Management' is set to include 'Success' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE9237-69AE-11D9-BED3-505054503030}"
	passed: if("%result%.includes('Success') || %result%.includes('Erfolg')")
},
{
	stepid: "17.2.3"
    desc: "Ensure 'Audit User Account Management' is set to 'Success and Failure' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE9235-69AE-11D9-BED3-505054503030}"
	passed: if("%result% == 'Success and Failure' || %result% == 'Erfolg und Fehler'")
},
{
	stepid: "17.3.1"
    desc: "Ensure 'Audit PNP Activity' is set to include 'Success' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0cce9248-69ae-11d9-bed3-505054503030}"
	passed: if("%result%.includes('Success') || %result%.includes('Erfolg')")
},
{
	stepid: "17.3.2"
    desc: "Ensure 'Audit Process Creation' is set to include 'Success' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE922B-69AE-11D9-BED3-505054503030}"
	passed: if("%result%.includes('Success') || %result%.includes('Erfolg')")
},
{
	stepid: "17.5.1"
    desc: "Ensure 'Audit Account Lockout' is set to include 'Failure' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE9217-69AE-11D9-BED3-505054503030}"
	passed: if("%result%.includes('Failure') || %result%.includes('Fehler')")
},
{
	stepid: "17.5.2"
    desc: "Ensure 'Audit Group Membership' is set to include 'Success' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE9249-69AE-11D9-BED3-505054503030}"
	passed: if("%result%.includes('Success') || %result%.includes('Erfolg')")
},
{
	stepid: "17.5.3"
    desc: "Ensure 'Audit Logoff' is set to include 'Success' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE9216-69AE-11D9-BED3-505054503030}"
	passed: if("%result%.includes('Success') || %result%.includes('Erfolg')")
},
{
	stepid: "17.5.4"
    desc: "Ensure 'Audit Logon' is set to 'Success and Failure' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE9215-69AE-11D9-BED3-505054503030}"
	passed: if("%result% == 'Success and Failure' || %result% == 'Erfolg und Fehler'")
},
{
	stepid: "17.5.5"
    desc: "Ensure 'Audit Other Logon/Logoff Events' is set to 'Success and Failure' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE921C-69AE-11D9-BED3-505054503030}"
	passed: if("%result% == 'Success and Failure' || %result% == 'Erfolg und Fehler'")
},
{
	stepid: "17.5.6"
    desc: "Ensure 'Audit Special Logon' is set to include 'Success' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE921B-69AE-11D9-BED3-505054503030}"
	passed: if("%result%.includes('Success') || %result%.includes('Erfolg')")
},
{
	stepid: "17.6.1"
    desc: "Ensure 'Audit Detailed File Share' is set to include 'Failure' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE9244-69AE-11D9-BED3-505054503030}"
	passed: if("%result%.includes('Failure') || %result%.includes('Fehler')")
},
{
	stepid: "17.6.2"
    desc: "Ensure 'Audit File Share' is set to 'Success and Failure' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE9224-69AE-11D9-BED3-505054503030}"
	passed: if("%result% == 'Success and Failure' || %result% == 'Erfolg und Fehler'")
},
{
	stepid: "17.6.3"
    desc: "Ensure 'Audit Other Object Access Events' is set to 'Success and Failure' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE9227-69AE-11D9-BED3-505054503030}"
	passed: if("%result% == 'Success and Failure' || %result% == 'Erfolg und Fehler'")
},
{
	stepid: "17.6.4"
    desc: "Ensure 'Audit Removable Storage' is set to 'Success and Failure' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE9245-69AE-11D9-BED3-505054503030}"
	passed: if("%result% == 'Success and Failure' || %result% == 'Erfolg und Fehler'")
},
{
	stepid: "17.7.1"
    desc: "Ensure 'Audit Audit Policy Change' is set to include 'Success' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE922F-69AE-11D9-BED3-505054503030}"
	passed: if("%result%.includes('Success') || %result%.includes('Erfolg')")
},
{
	stepid: "17.7.2"
    desc: "Ensure 'Audit Authentication Policy Change' is set to include 'Success' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE9230-69AE-11D9-BED3-505054503030}"
	passed: if("%result%.includes('Success') || %result%.includes('Erfolg')")
},
{
	stepid: "17.7.3"
    desc: "Ensure 'Audit Authorization Policy Change' is set to include 'Success' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE9231-69AE-11D9-BED3-505054503030}"
	passed: if("%result%.includes('Success') || %result%.includes('Erfolg')")
},
{
	stepid: "17.7.4"
    desc: "Ensure 'Audit MPSSVC Rule-Level Policy Change' is set to 'Success and Failure' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE9232-69AE-11D9-BED3-505054503030}"
	passed: if("%result% == 'Success and Failure' || %result% == 'Erfolg und Fehler'")
},
{
	stepid: "17.7.5"
    desc: "Ensure 'Audit Other Policy Change Events' is set to include 'Failure' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE9234-69AE-11D9-BED3-505054503030}"
	passed: if("%result%.includes('Failure') || %result%.includes('Fehler')")
},
{
	stepid: "17.8.1"
    desc: "Ensure 'Audit Sensitive Privilege Use' is set to 'Success and Failure' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE9228-69AE-11D9-BED3-505054503030}"
	passed: if("%result% == 'Success and Failure' || %result% == 'Erfolg und Fehler'")
},
{
	stepid: "17.9.1"
    desc: "Ensure 'Audit IPsec Driver' is set to 'Success and Failure' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE9213-69AE-11D9-BED3-505054503030}"
	passed: if("%result% == 'Success and Failure' || %result% == 'Erfolg und Fehler'")
},
{
	stepid: "17.9.2"
    desc: "Ensure 'Audit Other System Events' is set to 'Success and Failure' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE9214-69AE-11D9-BED3-505054503030}"
	passed: if("%result% == 'Success and Failure' || %result% == 'Erfolg und Fehler'")
},
{
	stepid: "17.9.3"
    desc: "Ensure 'Audit Security State Change' is set to include 'Success' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE9210-69AE-11D9-BED3-505054503030}"
	passed: if("%result%.includes('Success') || %result%.includes('Erfolg')")
},
{
	stepid: "17.9.4"
    desc: "Ensure 'Audit Security System Extension' is set to include 'Success' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE9211-69AE-11D9-BED3-505054503030}"
	passed: if("%result%.includes('Success') || %result%.includes('Erfolg')")
},
{
	stepid: "17.9.5"
    desc: "Ensure 'Audit System Integrity' is set to 'Success and Failure' (Automated)"
    module: "AuditPolicyQuery"

	guid: "{0CCE9212-69AE-11D9-BED3-505054503030}"
	passed: if("%result% == 'Success and Failure' || %result% == 'Erfolg und Fehler'")
},
{
	stepid: "18.1.1.1-T"
    desc: "Check if template 'ControlPanelDisplay.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "ControlPanelDisplay.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.1.1.1"
    	desc: "Ensure 'Prevent enabling lock screen camera' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Personalization"
		value: "NoLockScreenCamera"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.1.1.2"
    	desc: "Ensure 'Prevent enabling lock screen slide show' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Personalization"
		value: "NoLockScreenSlideshow"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.1.2.2-T"
    desc: "Check if template 'Globalization.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "Globalization.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.1.2.2"
    	desc: "Ensure 'Allow users to enable online speech recognition services' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\InputPersonalization"
		value: "AllowInputPersonalization"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.1.3-T"
    desc: "Check if template 'ControlPanelDisplay.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "ControlPanelDisplay.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.1.3"
    	desc: "Ensure 'Allow Online Tips' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer"
		value: "AllowOnlineTips"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.2.1"
    desc: "Ensure LAPS AdmPwd GPO Extension / CSE is installed (Automated)"
    module: "IsFile"

	path: "C:\Program Files\LAPS\CSE\AdmPwd.dll"
	passed: if("%result%")
},
{
	stepid: "18.2.2-T"
    desc: "Check if template 'AdmPwd.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "AdmPwd.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.2.2"
    	desc: "Ensure 'Do not allow password expiration time longer than required by policy' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft Services\AdmPwd"
		value: "PwdExpirationProtectionEnabled"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.2.3"
    	desc: "Ensure 'Enable Local Admin Password Management' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft Services\AdmPwd"
		value: "AdmPwdEnabled"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.2.4"
    	desc: "Ensure 'Password Settings: Password Complexity' is set to 'Enabled: Large letters + small letters + numbers + special characters' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft Services\AdmPwd"
		value: "PasswordComplexity"
		passed: if("%result% == '4'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.2.5"
    	desc: "Ensure 'Password Settings: Password Length' is set to 'Enabled: 15 ormore' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft Services\AdmPwd"
		value: "PasswordLengt"
		passed: if("%result% >= '15'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.2.6"
    	desc: "Ensure 'Password Settings: Password Age (Days)' is set to 'Enabled: 30 or fewer' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft Services\AdmPwd"
		value: "PasswordAgeDay"
		passed: if("%result% <= '30'")
	},
},
{
	stepid: "18.3.1-T"
    desc: "Check if template 'SecGuide.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "SecGuide.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.3.1"
    	desc: "Ensure 'Apply UAC restrictions to local accounts on network logons' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
		value: "LocalAccountTokenFilterPolicy"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.3.2"
    	desc: "Ensure 'Configure SMB v1 client driver' is set to 'Enabled: Disable driver (recommended)' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\mrxsmb10"
		value: "Start"
		passed: if("%result% == '4'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.3.3"
    	desc: "Ensure 'Configure SMB v1 server' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters"
		value: "SMB1"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.3.4"
    	desc: "Ensure 'Enable Structured Exception Handling Overwrite Protection (SEHOP)' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\kernel"
		value: "DisableExceptionChainValidation"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.3.5"
    	desc: "Ensure 'NetBT NodeType configuration' is set to 'Enabled: P-node (recommended)' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\NetBT\Parameters"
		value: "NodeType"
		passed: if("%result% == '2'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.3.6"
    	desc: "Ensure 'WDigest Authentication' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest"
		value: "UseLogonCredential"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.4.1-T"
    desc: "Check if template 'MSS-legacy.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "MSS-legacy.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.4.1"
    	desc: "Ensure 'MSS: (AutoAdminLogon) Enable Automatic Logon (not recommended)' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon"
		value: "AutoAdminLogon"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.4.2"
    	desc: "Ensure 'MSS: (DisableIPSourceRouting IPv6) IP source routing protection level (protects against packet spoofing)' is set to 'Enabled: Highestprotection, source routing is completely disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip6\Parameters"
		value: "DisableIPSourceRouting"
		passed: if("%result% == '2'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.4.3"
    	desc: "Ensure 'MSS: (DisableIPSourceRouting) IP source routing protection level (protects against packet spoofing)' is set to 'Enabled: Highest protection,source routing is completely disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters"
		value: "DisableIPSourceRouting"
		passed: if("%result% == '2'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.4.4"
    	desc: "Ensure 'MSS: (DisableSavePassword) Prevent the dial-up passwordfrom being saved' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\RasMan\Parameters"
		value: "DisableSavePassword"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.4.5"
    	desc: "Ensure 'MSS: (EnableICMPRedirect) Allow ICMP redirects to override OSPF generated routes' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters"
		value: "EnableICMPRedirect"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.4.6"
    	desc: "Ensure 'MSS: (KeepAliveTime) How often keep-alive packets are sentin milliseconds' is set to 'Enabled: 300,000 or 5 minutes (recommended)' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters"
		value: "KeepAliveTime"
		passed: if("%result% == '300000'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.4.7"
    	desc: "Ensure 'MSS: (NoNameReleaseOnDemand) Allow the computer to ignore NetBIOS name release requests except from WINS servers' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\NetBT\Parameters"
		value: "NoNameReleaseOnDemand"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.4.8"
    	desc: "Ensure 'MSS: (PerformRouterDiscovery) Allow IRDP to detect andconfigure Default Gateway addresses (could lead to DoS)' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters"
		value: "PerformRouterDiscovery"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.4.9"
    	desc: "Ensure 'MSS: (SafeDllSearchMode) Enable Safe DLL search mode (recommended)' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager"
		value: "SafeDllSearchMode"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.4.10"
    	desc: "Ensure 'MSS: (ScreenSaverGracePeriod) The time in seconds before the screen saver grace period expires (0 recommended)' is set to 'Enabled: 5 or fewer seconds' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon"
		value: "ScreenSaverGracePeriod"
		passed: if("%result% <= '5'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.4.11"
    	desc: "Ensure 'MSS: (TcpMaxDataRetransmissions IPv6) How many timesunacknowledged data is retransmitted' is set to 'Enabled: 3' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\TCPIP6\Parameters"
		value: "TcpMaxDataRetransmissions"
		passed: if("%result% == '3'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.4.12"
    	desc: "Ensure 'MSS: (TcpMaxDataRetransmissions) How many timesunacknowledged data is retransmitted' is set to 'Enabled: 3' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters"
		value: "TcpMaxDataRetransmissions"
		passed: if("%result% == '3'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.4.13"
    	desc: "Ensure 'MSS: (WarningLevel) Percentage threshold for the security event log at which the system will generate a warning' is set to 'Enabled: 90% orless' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Eventlog\Security"
		value: "WarningLevel"
		passed: if("%result% <= '90'")
	},
},
{
	stepid: "18.5.4.1-T"
    desc: "Check if template 'DnsClient.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "DnsClient.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.5.4.1"
    	desc: "Ensure 'Turn off multicast name resolution' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\DNSClient"
		value: "EnableMulticast"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.5.5.1-T"
    desc: "Check if template 'GroupPolicy.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "GroupPolicy.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.5.5.1"
    	desc: "Ensure 'Enable Font Providers' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\System"
		value: "EnableFontProviders"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.5.8.1"
    desc: "Ensure 'Enable insecure guest logons' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\LanmanWorkstation"
	value: "AllowInsecureGuestAuth"
	passed: if("%result% == '0'")
},
{
	stepid: "18.5.9.1-Key0"
	desc: "Ensure 'Turn on Mapper I/O (LLTDIO) driver' is set to 'Disabled' (Automated)"
	module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\LLTD"
	value: "AllowLLTDIOOnDomain"
	passed: if("%result% == '0'")
},
{
	stepid: "18.5.9.1-Key1"
	desc: "Ensure 'Turn on Mapper I/O (LLTDIO) driver' is set to 'Disabled' (Automated)"
	module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\LLTD"
	value: "AllowLLTDIOOnPublicNet"
	passed: if("%result% == '0'")
},
{
	stepid: "18.5.9.1-Key2"
	desc: "Ensure 'Turn on Mapper I/O (LLTDIO) driver' is set to 'Disabled' (Automated)"
	module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\LLTD"
	value: "EnableLLTDIO"
	passed: if("%result% == '0'")
},
{
	stepid: "18.5.9.1-Key3"
	desc: "Ensure 'Turn on Mapper I/O (LLTDIO) driver' is set to 'Disabled' (Automated)"
	module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\LLTD"
	value: "ProhibitLLTDIOOnPrivateNet"
	passed: if("%result% == '0'")
},
{
	stepid: "18.5.9.2-Key0"
	desc: "Ensure 'Turn on Responder (RSPNDR) driver' is set to 'Disabled' (Automated)"
	module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\LLTD"
	value: "AllowRspndrOnDomain"
	passed: if("%result% == '0'")
},
{
	stepid: "18.5.9.2-Key1"
	desc: "Ensure 'Turn on Responder (RSPNDR) driver' is set to 'Disabled' (Automated)"
	module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\LLTD"
	value: "AllowRspndrOnPublicNet"
	passed: if("%result% == '0'")
},
{
	stepid: "18.5.9.2-Key2"
	desc: "Ensure 'Turn on Responder (RSPNDR) driver' is set to 'Disabled' (Automated)"
	module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\LLTD"
	value: "EnableRspndr"
	passed: if("%result% == '0'")
},
{
	stepid: "18.5.9.2-Key3"
	desc: "Ensure 'Turn on Responder (RSPNDR) driver' is set to 'Disabled' (Automated)"
	module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\LLTD"
	value: "ProhibitRspndrOnPrivateNet"
	passed: if("%result% == '0'")
},
{
	stepid: "18.5.10.2"
    desc: "Ensure 'Turn off Microsoft Peer-to-Peer Networking Services' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Peernet"
	value: "Disabled"
	passed: if("%result% == '1'")
},
{
	stepid: "18.5.11.2"
    desc: "Ensure 'Prohibit installation and configuration of Network Bridge on your DNS domain network' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Network Connections"
	value: "NC_AllowNetBridge_NLA"
	passed: if("%result% == '0'")
},
{
	stepid: "18.5.11.3"
    desc: "Ensure 'Prohibit use of Internet Connection Sharing on your DNS domain network' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Network Connections"
	value: "NC_ShowSharedAccessUI"
	passed: if("%result% == '0'")
},
{
	stepid: "18.5.11.4"
    desc: "Ensure 'Require domain users to elevate when setting a network 'slocation' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Network Connections"
	value: "NC_StdDomainUserSetLocation"
	passed: if("%result% == '1'")
},
{
	stepid: "18.5.14.1-T"
    desc: "Check if template 'NetworkProvider.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "NetworkProvider.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.5.14.1-Key0"
    	desc: "Ensure 'Hardened UNC Paths' is set to 'Enabled, with "RequireMutual Authentication" and "Require Integrity" set for all NETLOGON and SYSVOLshares' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\NetworkProvider\HardenedPaths"
		value: "\\*\NETLOGON"
		passed: if("%result% == 'RequireMutualAuthentication=1, RequireIntegrity=1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.5.14.1-Key1"
    	desc: "Ensure 'Hardened UNC Paths' is set to 'Enabled, with "RequireMutual Authentication" and "Require Integrity" set for all NETLOGON and SYSVOLshares' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\NetworkProvider\HardenedPaths"
		value: "\\*\SYSVOL"
		passed: if("%result% == 'RequireMutualAuthentication=1, RequireIntegrity=1'")
	},
},
{
	stepid: "18.5.19.2.1"
    desc: "Disable IPv6 (Ensure TCPIP6 Parameter 'DisabledComponents' is set to '0xff (255)') (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\TCPIP6\Parameters"
	value: "DisabledComponents"
	passed: if("%result% == '255'")
},
{
	stepid: "18.5.20.1-T"
    desc: "Check if template 'WindowsConnectNow.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "WindowsConnectNow.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.5.20.1-Key0"
    	desc: "Ensure 'Configuration of wireless settings using Windows ConnectNow' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WCN\Registrars"
		value: "EnableRegistrars"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.5.20.1-Key1"
    	desc: "Ensure 'Configuration of wireless settings using Windows ConnectNow' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WCN\Registrars"
		value: "DisableUPnPRegistrar"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.5.20.1-Key2"
    	desc: "Ensure 'Configuration of wireless settings using Windows ConnectNow' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WCN\Registrars"
		value: "DisableInBand802DOT11Registrar"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.5.20.1-Key3"
    	desc: "Ensure 'Configuration of wireless settings using Windows ConnectNow' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WCN\Registrars"
		value: "DisableFlashConfigRegistrar"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.5.20.2"
    	desc: "Ensure 'Prohibit access of the Windows Connect Now wizards' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WCN\UI"
		value: "DisableWcnUi"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.5.21.1-T"
    desc: "Check if template 'WCM.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "WCM.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.5.21.1"
    	desc: "Ensure 'Minimize the number of simultaneous connections to theInternet or a Windows Domain' is set to 'Enabled: 3 = Prevent Wi-Fi when onEthernet' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WcmSvc\GroupPolicy"
		value: "fMinimizeConnections"
		passed: if("%result% == '3'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.5.21.2"
    	desc: "Ensure 'Prohibit connection to non-domain networks whenconnected to domain authenticated network' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WcmSvc\GroupPolicy"
		value: "fBlockNonDomain"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.5.23.2.1-T"
    desc: "Check if template 'wlansvc.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "wlansvc.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.5.23.2.1"
    	desc: "Ensure 'Allow Windows to automatically connect to suggestedopen hotspots, to networks shared by contacts, and to hotspots offering paidservices' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WcmSvc\wifinetworkmanager\config"
		value: "AutoConnectAllowedOEM"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.7.1.1-T"
    desc: "Check if template 'WPN.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "WPN.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.7.1.1"
    	desc: "Ensure 'Turn off notifications network usage' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications"
		value: "NoCloudApplicationNotification"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.8.3.1-T"
    desc: "Check if template 'AuditSettings.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "AuditSettings.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.8.3.1"
    	desc: "Ensure 'Include command line in process creation events' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\Audit"
		value: "ProcessCreationIncludeCmdLine_Enabled"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.8.4.1-T"
    desc: "Check if template 'CredSsp.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "CredSsp.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.8.4.1"
    	desc: "Ensure 'Encryption Oracle Remediation' is set to 'Enabled: Force Updated Clients' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\CredSSP\Parameters"
		value: "AllowEncryptionOracle"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.4.2"
    	desc: "Ensure 'Remote host allows delegation of non-exportablecredentials' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\CredentialsDelegation"
		value: "AllowProtectedCreds"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.8.5.1-T"
    desc: "Check if template 'DeviceGuard.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "DeviceGuard.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.8.5.1"
    	desc: "Ensure 'Turn On Virtualization Based Security' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard"
		value: "EnableVirtualizationBasedSecurity"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.5.2"
    	desc: "Ensure 'Turn On Virtualization Based Security: Select PlatformSecurity Level' is set to 'Secure Boot and DMA Protection' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard"
		value: "RequirePlatformSecurityFeatures"
		passed: if("%result% == '3'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.5.3"
    	desc: "Ensure 'Turn On Virtualization Based Security: Virtualization BasedProtection of Code Integrity' is set to 'Enabled with UEFI lock' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard"
		value: "HypervisorEnforcedCodeIntegrity"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.5.4"
    	desc: "Ensure 'Turn On Virtualization Based Security: Require UEFIMemory Attributes Table' is set to 'True (checked)' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard"
		value: "HVCIMATRequired"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.5.5"
    	desc: "Ensure 'Turn On Virtualization Based Security: Credential GuardConfiguration' is set to 'Enabled with UEFI lock' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard"
		value: "LsaCfgFlags"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.5.6"
    	desc: "Ensure 'Turn On Virtualization Based Security: Secure LaunchConfiguration' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard"
		value: "ConfigureSystemGuardLaunch"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.8.7.1.1"
    desc: "Ensure 'Prevent installation of devices that match any of thesedevice IDs' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DeviceInstall\Restrictions"
	value: "DenyDeviceIDs"
	passed: if("%result% == '1'")
},
{
	stepid: "18.8.7.1.2"
    desc: "Ensure 'Prevent installation of devices that match any of thesedevice IDs: Prevent installation of devices that match any of these device IDs' is set to 'PCI\CC_0C0A' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DeviceInstall\Restrictions\DenyDeviceIDs"
	value: "1"
	passed: if("%result%.includes('PCI\\CC_0C0A')")
},
{
	stepid: "18.8.7.1.3"
    desc: "Ensure 'Prevent installation of devices that match any of thesedevice IDs: Also apply to matching devices that are already installed.' is set to 'True' (checked) (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DeviceInstall\Restrictions"
	value: "DenyDeviceIDsRetroactive"
	passed: if("%result% == '1'")
},
{
	stepid: "18.8.7.1.4"
    desc: "Ensure 'Prevent installation of devices using drivers that matchthese device setup classes' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DeviceInstall\Restrictions"
	value: "DenyDeviceClasses"
	passed: if("%result% == '1'")
},
{
	stepid: "18.8.7.1.5-Key0"
	desc: "Ensure 'Prevent installation of devices using drivers that matchthese device setup classes: Prevent installation of devices using drivers for thesedevice setup' is set to 'IEEE 1394 device setup classes' (Automated)"
	module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DeviceInstall\Restrictions\DenyDeviceClasses"
	value: "1"
	passed: if("%result% == 'd48179be-ec20-11d1-b6b8-00c04fa372a7'")
},
{
	stepid: "18.8.7.1.5-Key1"
	desc: "Ensure 'Prevent installation of devices using drivers that matchthese device setup classes: Prevent installation of devices using drivers for thesedevice setup' is set to 'IEEE 1394 device setup classes' (Automated)"
	module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DeviceInstall\Restrictions\DenyDeviceClasses"
	value: "2"
	passed: if("%result% == '7ebefbc0-3200-11d2-b4c2-00a0C9697d07'")
},
{
	stepid: "18.8.7.1.5-Key2"
	desc: "Ensure 'Prevent installation of devices using drivers that matchthese device setup classes: Prevent installation of devices using drivers for thesedevice setup' is set to 'IEEE 1394 device setup classes' (Automated)"
	module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DeviceInstall\Restrictions\DenyDeviceClasses"
	value: "3"
	passed: if("%result% == 'c06ff265-ae09-48f0-812c-16753d7cba83'")
},
{
	stepid: "18.8.7.1.5-Key3"
	desc: "Ensure 'Prevent installation of devices using drivers that matchthese device setup classes: Prevent installation of devices using drivers for thesedevice setup' is set to 'IEEE 1394 device setup classes' (Automated)"
	module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DeviceInstall\Restrictions\DenyDeviceClasses"
	value: "4"
	passed: if("%result% == '6bdd1fc1-810f-11d0-bec7-08002be2092f'")
},
{
	stepid: "18.8.7.1.6"
    desc: "Ensure 'Prevent installation of devices using drivers that matchthese device setup classes: Also apply to matching devices that are alreadyinstalled.' is set to 'True' (checked) (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DeviceInstall\Restrictions"
	value: "DenyDeviceClassesRetroactive"
	passed: if("%result% == '1'")
},
{
	stepid: "18.8.14.1-T"
    desc: "Check if template 'EarlyLaunchAM.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "EarlyLaunchAM.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.8.14.1"
    	desc: "Ensure 'Boot-Start Driver Initialization Policy' is set to 'Enabled:Good, unknown and bad but critical' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Policies\EarlyLaunch"
		value: "DriverLoadPolicy"
		passed: if("%result% == '3'")
	},
},
{
	stepid: "18.8.21.2-T"
    desc: "Check if template 'GroupPolicy.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "GroupPolicy.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.8.21.2"
    	desc: "Ensure 'Configure registry policy processing: Do not apply during periodic background processing' is set to 'Enabled: FALSE' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Group Policy\{35378EAC-683F-11D2-A89A-00C04FBBCFA2}"
		value: "NoBackgroundPolicy"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.21.3"
    	desc: "Ensure 'Configure registry policy processing: Process even if the Group Policy objects have not changed' is set to 'Enabled: TRUE' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Group Policy\{35378EAC-683F-11D2-A89A-00C04FBBCFA2}"
		value: "NoGPOListChanges"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.21.4"
    	desc: "Ensure 'Continue experiences on this device' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\System"
		value: "EnableCdp"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.21.5"
    	desc: "Ensure 'Turn off background refresh of Group Policy' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
		value: "DisableBkGndGroupPolicy"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.8.22.1.1-T"
    desc: "Check if template 'ICM.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "ICM.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.8.22.1.1"
    	desc: "Ensure 'Turn off access to the Store' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Explorer"
		value: "NoUseStoreOpenWith"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.22.1.2"
    	desc: "Ensure 'Turn off downloading of print drivers over HTTP' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Printers"
		value: "DisableWebPnPDownload"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.8.22.1.3-T"
    desc: "Check if template 'ShapeCollector.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "ShapeCollector.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.8.22.1.3"
    	desc: "Ensure 'Turn off handwriting personalization data sharing' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\TabletPC"
		value: "PreventHandwritingDataSharing"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.8.22.1.4-T"
    desc: "Check if template 'InkWatson.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "InkWatson.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.8.22.1.4"
    	desc: "Ensure 'Turn off handwriting recognition error reporting' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\HandwritingErrorReports"
		value: "PreventHandwritingErrorReports"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.8.22.1.5"
    desc: "Ensure 'Turn off Internet Connection Wizard if URL connection isreferring to Microsoft.com' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Internet Connection Wizard"
	value: "ExitOnMSICW"
	passed: if("%result% == '1'")
},
{
	stepid: "18.8.22.1.6"
    desc: "Ensure 'Turn off Internet download for Web publishing and online ordering wizards' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer"
	value: "NoWebServices"
	passed: if("%result% == '1'")
},
{
	stepid: "18.8.22.1.7"
    desc: "Ensure 'Turn off printing over HTTP' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Printers"
	value: "DisableHTTPPrinting"
	passed: if("%result% == '1'")
},
{
	stepid: "18.8.22.1.8"
    desc: "Ensure 'Turn off Registration if URL connection is referring to Microsoft.com' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Registration Wizard Control"
	value: "NoRegistration"
	passed: if("%result% == '1'")
},
{
	stepid: "18.8.22.1.9"
    desc: "Ensure 'Turn off Search Companion content file updates' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\SearchCompanion"
	value: "DisableContentFileUpdates"
	passed: if("%result% == '1'")
},
{
	stepid: "18.8.22.1.10"
    desc: "Ensure 'Turn off the "Order Prints" picture task' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer"
	value: "NoOnlinePrintsWizard"
	passed: if("%result% == '1'")
},
{
	stepid: "18.8.22.1.11"
    desc: "Ensure 'Turn off the "Publish to Web" task for files and folders' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer"
	value: "NoPublishingWizard"
	passed: if("%result% == '1'")
},
{
	stepid: "18.8.22.1.12"
    desc: "Ensure 'Turn off the Windows Messenger Customer ExperienceImprovement Program' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Messenger\Client"
	value: "CEIP"
	passed: if("%result% == '2'")
},
{
	stepid: "18.8.22.1.13"
    desc: "Ensure 'Turn off Windows Customer Experience ImprovementProgram' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\SQMClient\Windows"
	value: "CEIPEnable"
	passed: if("%result% == '0'")
},
{
	stepid: "18.8.22.1.14-Key0"
	desc: "Ensure 'Turn off Windows Error Reporting' is set to 'Enabled' (Automated)"
	module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Windows Error Reporting"
	value: "Disabled"
	passed: if("%result% == '1'")
},
{
	stepid: "18.8.22.1.14-Key1"
	desc: "Ensure 'Turn off Windows Error Reporting' is set to 'Enabled' (Automated)"
	module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\PCHealth\ErrorReporting"
	value: "DoReport"
	passed: if("%result% == '0'")
},
{
	stepid: "18.8.25.1-T"
    desc: "Check if template 'Kerberos.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "Kerberos.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.8.25.1-Key0"
    	desc: "Ensure 'Support device authentication using certificate' is set to 'Enabled: Automatic' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\kerberos\parameters"
		value: "DevicePKInitBehavior"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.25.1-Key1"
    	desc: "Ensure 'Support device authentication using certificate' is set to 'Enabled: Automatic' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\kerberos\parameters"
		value: "DevicePKInitEnabled"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.8.26.1-T"
    desc: "Check if template 'DmaGuard.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "DmaGuard.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.8.26.1"
    	desc: "Ensure 'Enumeration policy for external devices incompatible withKernel DMA Protection' is set to 'Enabled: Block All' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Kernel DMA Protection"
		value: "DeviceEnumerationPolicy"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.8.27.1-T"
    desc: "Check if template 'Globalization.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "Globalization.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.8.27.1"
    	desc: "Ensure 'Disallow copying of user input methods to the systemaccount for sign-in' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Control Panel\International"
		value: "BlockUserInputMethodsForSignIn"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.8.28.1-T"
    desc: "Check if template 'Logon.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "Logon.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.8.28.1"
    	desc: "Ensure 'Block user from showing account details on sign-in' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\System"
		value: "BlockUserFromShowingAccountDetailsOnSignin"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.28.2"
    	desc: "Ensure 'Do not display network selection UI' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\System"
		value: "DontDisplayNetworkSelectionUI"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.28.3"
    	desc: "Ensure 'Do not enumerate connected users on domain-joined computers' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\System"
		value: "DontEnumerateConnectedUsers"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.28.4"
    	desc: "Ensure 'Enumerate local users on domain-joined computers' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\System"
		value: "EnumerateLocalUsers"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.28.5"
    	desc: "Ensure 'Turn off app notifications on the lock screen' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\System"
		value: "DisableLockScreenAppNotifications"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.8.28.6-T"
    desc: "Check if template 'CredentialProviders.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "CredentialProviders.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.8.28.6"
    	desc: "Ensure 'Turn off picture password sign-in' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\System"
		value: "BlockDomainPicturePassword"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.28.7"
    	desc: "Ensure 'Turn on convenience PIN sign-in' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\System"
		value: "AllowDomainPINLogon"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.8.31.1-T"
    desc: "Check if template 'OSPolicy.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "OSPolicy.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.8.31.1"
    	desc: "Ensure 'Allow Clipboard synchronization across devices' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\System"
		value: "AllowCrossDeviceClipboard"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.31.2"
    	desc: "Ensure 'Allow upload of User Activities' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\System"
		value: "UploadUserActivities"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.8.34.6.1-T"
    desc: "Check if template 'Power.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "Power.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.8.34.6.1"
    	desc: "Ensure 'Allow network connectivity during connected-standby(on battery)' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Power\PowerSettings\f15576e8-98b7-4186-b944-eafa664402d9"
		value: "DCSettingIndex"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.34.6.2"
    	desc: "Ensure 'Allow network connectivity during connected-standby (plugged in)' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Power\PowerSettings\f15576e8-98b7-4186-b944-eafa664402d9"
		value: "ACSettingIndex"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.34.6.3"
    	desc: "Ensure 'Allow standby states (S1-S3) when sleeping (on battery)' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Power\PowerSettings\abfc2519-3608-4c2a-94ea-171b0ed546ab"
		value: "DCSettingIndex"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.34.6.4"
    	desc: "Ensure 'Allow standby states (S1-S3) when sleeping (plugged in)' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Power\PowerSettings\abfc2519-3608-4c2a-94ea-171b0ed546ab"
		value: "ACSettingIndex"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.34.6.5"
    	desc: "Ensure 'Require a password when a computer wakes (on battery)' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Power\PowerSettings\0e796bdb-100d-47d6-a2d5-f7d2daa51f51"
		value: "DCSettingIndex"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.34.6.6"
    	desc: "Ensure 'Require a password when a computer wakes (plugged in)' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Power\PowerSettings\0e796bdb-100d-47d6-a2d5-f7d2daa51f51"
		value: "ACSettingIndex"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.8.36.1-T"
    desc: "Check if template 'RemoteAssistance.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "RemoteAssistance.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.8.36.1"
    	desc: "Ensure 'Configure Offer Remote Assistance' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
		value: "fAllowUnsolicited"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.36.2"
    	desc: "Ensure 'Configure Solicited Remote Assistance' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
		value: "fAllowToGetHelp"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.8.37.1-T"
    desc: "Check if template 'RPC.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "RPC.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.8.37.1"
    	desc: "Ensure 'Enable RPC Endpoint Mapper Client Authentication' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Rpc"
		value: "EnableAuthEpResolution"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.8.37.2"
    	desc: "Ensure 'Restrict Unauthenticated RPC clients' is set to 'Enabled:Authenticated' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Rpc"
		value: "RestrictRemoteClients"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.8.47.5.1-T"
    desc: "Check if template 'MSDT.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "MSDT.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.8.47.5.1"
    	desc: "Ensure 'Microsoft Support Diagnostic Tool: Turn on MSDTinteractive communication with support provider' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\ScriptedDiagnosticsProvider\Policy"
		value: "DisableQueryRemoteServer"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.8.47.11.1-T"
    desc: "Check if template 'PerformancePerftrack.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "PerformancePerftrack.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.8.47.11.1"
    	desc: "Ensure 'Enable/Disable PerfTrack' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WDI\{9c5a40da-b965-4fc3-8781-88dd50a6299d}"
		value: "ScenarioExecutionEnabled"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.8.49.1-T"
    desc: "Check if template 'UserProfiles.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "UserProfiles.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.8.49.1"
    	desc: "Ensure 'Turn off the advertising ID' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo"
		value: "DisabledByGroupPolicy"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.8.52.1.1"
    desc: "Ensure 'Enable Windows NTP Client' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\W32Time\TimeProviders\NtpClient"
	value: "Enabled"
	passed: if("%result% == '1'")
},
{
	stepid: "18.8.52.1.2"
    desc: "Ensure 'Enable Windows NTP Server' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\W32Time\TimeProviders\NtpServer"
	value: "Enabled"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.4.1-T"
    desc: "Check if template 'AppxPackageManager.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "AppxPackageManager.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.4.1"
    	desc: "Ensure 'Allow a Windows app to share application data betweenusers' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\AppModel\StateManager"
		value: "AllowSharedLocalAppData"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.4.2"
    	desc: "Ensure 'Prevent non-admin users from installing packaged Windows apps' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Appx"
		value: "BlockNonAdminUserInstall"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.5.1-T"
    desc: "Check if template 'AppPrivacy.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "AppPrivacy.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.5.1"
    	desc: "Ensure 'Let Windows apps activate with voice while the system is locked' is set to 'Enabled: Force Deny' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy"
		value: "LetAppsActivateWithVoiceAboveLock"
		passed: if("%result% == '2'")
	},
},
{
	stepid: "18.9.6.1-T"
    desc: "Check if template 'AppXRuntime.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "AppXRuntime.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.6.1"
    	desc: "Ensure 'Allow Microsoft accounts to be optional' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
		value: "MSAOptional"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.6.2"
    	desc: "Ensure 'Block launching Universal Windows apps with WindowsRuntime API access from hosted content.' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
		value: "BlockHostedAppAccessWinRT"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.8.1-T"
    desc: "Check if template 'AutoPlay.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "AutoPlay.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.8.1"
    	desc: "Ensure 'Disallow Autoplay for non-volume devices' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Explorer"
		value: "NoAutoplayfornonVolume"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.8.2"
    	desc: "Ensure 'Set the default behavior for AutoRun' is set to 'Enabled: Do not execute any autorun commands' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer"
		value: "NoAutorun"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.8.3"
    	desc: "Ensure 'Turn off Autoplay' is set to 'Enabled: All drives' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer"
		value: "NoDriveTypeAutoRun"
		passed: if("%result% == '255'")
	},
},
{
	stepid: "18.9.10.1.1-T"
    desc: "Check if template 'Biometrics.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "Biometrics.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.10.1.1"
    	desc: "Ensure 'Configure enhanced anti-spoofing' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Biometrics\FacialFeatures"
		value: "EnhancedAntiSpoofing"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.11.1.1-T"
    desc: "Check if template 'VolumeEncryption.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "VolumeEncryption.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.1.1"
    	desc: "Ensure 'Allow access to BitLocker-protected fixed data drivesfrom earlier versions of Windows' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "FDVDiscoveryVolumeType"
		passed: if("%result% == '<none>'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.1.2"
    	desc: "Ensure 'Choose how BitLocker-protected fixed drives can berecovered' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "FDVRecovery"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.1.3"
    	desc: "Ensure 'Choose how BitLocker-protected fixed drives can berecovered: Allow data recovery agent' is set to 'Enabled: True' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "FDVManageDRA"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.1.4"
    	desc: "Ensure 'Choose how BitLocker-protected fixed drives can berecovered: Recovery Password' is set to 'Enabled: Allow 48-digit recoverypassword' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "FDVRecoveryPassword"
		passed: if("%result% == '2'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.1.5"
    	desc: "Ensure 'Choose how BitLocker-protected fixed drives can berecovered: Recovery Key' is set to 'Enabled: Allow 256-bit recovery key' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "FDVRecoveryKey"
		passed: if("%result% == '2'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.1.6"
    	desc: "Ensure 'Choose how BitLocker-protected fixed drives can berecovered: Omit recovery options from the BitLocker setup wizard' is set to 'Enabled: True' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "FDVHideRecoveryPage"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.1.7"
    	desc: "Ensure 'Choose how BitLocker-protected fixed drives can berecovered: Save BitLocker recovery information to AD DS for fixed data drives' is set to 'Enabled: False' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "FDVActiveDirectoryBackup"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.1.8"
    	desc: "Ensure 'Choose how BitLocker-protected fixed drives can berecovered: Configure storage of BitLocker recovery information to AD DS' is set to 'Enabled: Backup recovery passwords and key packages' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "FDVActiveDirectoryInfoToStore"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.1.9"
    	desc: "Ensure 'Choose how BitLocker-protected fixed drives can berecovered: Do not enable BitLocker until recovery information is stored to AD DSfor fixed data drives' is set to 'Enabled: False' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "FDVRequireActiveDirectoryBackup"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.1.10"
    	desc: "Ensure 'Configure use of hardware-based encryption for fixeddata drives' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "FDVHardwareEncryption"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.1.11"
    	desc: "Ensure 'Configure use of hardware-based encryption for fixeddata drives: Use BitLocker software-based encryption when hardware encryptionis not available' is set to 'Enabled: True' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "FDVAllowSoftwareEncryptionFailover"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.1.12"
    	desc: "Ensure 'Configure use of hardware-based encryption for fixeddata drives: Restrict encryption algorithms and cipher suites allowed forhardware-based encryption' is set to 'Enabled: False' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "FDVRestrictHardwareEncryptionAlgorithms"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.1.13"
    	desc: "Ensure 'Configure use of hardware-based encryption for fixeddata drives: Restrict crypto algorithms or cipher suites to the following:' is set to 'Enabled: 2.16.840.1.101.3.4.1.2;2.16.840.1.101.3.4.1.42' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "FDVAllowedHardwareEncryptionAlgorithms"
		passed: if("%result% == '2.16.840.1.101.3.4.1.2;2.16.840.1.101.3.4.1.42'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.1.14"
    	desc: "Ensure 'Configure use of passwords for fixed data drives' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "FDVPassphrase"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.1.15"
    	desc: "Ensure 'Configure use of smart cards on fixed data drives' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "FDVAllowUserCert"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.1.16"
    	desc: "Ensure 'Configure use of smart cards on fixed data drives:Require use of smart cards on fixed data drives' is set to 'Enabled: True' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "FDVEnforceUserCert"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.2.1"
    	desc: "Ensure 'Allow enhanced PINs for startup' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "UseEnhancedPin"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.2.2"
    	desc: "Ensure 'Allow Secure Boot for integrity validation' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "OSAllowSecureBootForIntegrity"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.2.3"
    	desc: "Ensure 'Choose how BitLocker-protected operating systemdrives can be recovered' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "OSRecovery"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.2.4"
    	desc: "Ensure 'Choose how BitLocker-protected operating systemdrives can be recovered: Allow data recovery agent' is set to 'Enabled: False' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "OSManageDRA"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.2.5"
    	desc: "Ensure 'Choose how BitLocker-protected operating systemdrives can be recovered: Recovery Password' is set to 'Enabled: Require 48-digitrecovery password' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "OSRecoveryPassword"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.2.6"
    	desc: "Ensure 'Choose how BitLocker-protected operating systemdrives can be recovered: Recovery Key' is set to 'Enabled: Do not allow 256-bitrecovery key' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "OSRecoveryKey"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.2.7"
    	desc: "Ensure 'Choose how BitLocker-protected operating systemdrives can be recovered: Omit recovery options from the BitLocker setup wizard' is set to 'Enabled: True' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "OSHideRecoveryPage"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.2.8"
    	desc: "Ensure 'Choose how BitLocker-protected operating systemdrives can be recovered: Save BitLocker recovery information to AD DS foroperating system drives' is set to 'Enabled: True' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "OSActiveDirectoryBackup"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.2.9"
    	desc: "Ensure 'Choose how BitLocker-protected operating systemdrives can be recovered: Configure storage of BitLocker recovery information toAD DS:' is set to 'Enabled: Store recovery passwords and key packages' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "OSActiveDirectoryInfoToStore"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.2.10"
    	desc: "Ensure 'Choose how BitLocker-protected operating systemdrives can be recovered: Do not enable BitLocker until recovery information isstored to AD DS for operating system drives' is set to 'Enabled: True' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "OSRequireActiveDirectoryBackup"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.2.11"
    	desc: "Ensure 'Configure use of hardware-based encryption foroperating system drives' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "OSHardwareEncryption"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.2.12"
    	desc: "Ensure 'Configure use of hardware-based encryption foroperating system drives: Use BitLocker software-based encryption whenhardware encryption is not available' is set to 'Enabled: True' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "OSAllowSoftwareEncryptionFailover"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.2.13"
    	desc: "Ensure 'Configure use of hardware-based encryption foroperating system drives: Restrict encryption algorithms and cipher suites allowedfor hardware-based encryption' is set to 'Enabled: False' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "OSRestrictHardwareEncryptionAlgorithms"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.2.14"
    	desc: "Ensure 'Configure use of hardware-based encryption foroperating system drives: Restrict crypto algorithms or cipher suites to thefollowing:' is set to 'Enabled: 2.16.840.1.101.3.4.1.2;2.16.840.1.101.3.4.1.42' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "OSAllowedHardwareEncryptionAlgorithms"
		passed: if("%result% == '2.16.840.1.101.3.4.1.2;2.16.840.1.101.3.4.1.42'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.2.15"
    	desc: "Ensure 'Configure use of passwords for operating systemdrives' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "OSPassphrase"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.2.16"
    	desc: "Ensure 'Require additional authentication at startup' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "UseAdvancedStartup"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.2.17"
    	desc: "Ensure 'Require additional authentication at startup: AllowBitLocker without a compatible TPM' is set to 'Enabled: False' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "EnableBDEWithNoTPM"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.3.1"
    	desc: "Ensure 'Allow access to BitLocker-protected removable datadrives from earlier versions of Windows' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "RDVDiscoveryVolumeType"
		passed: if("%result% == '<none>'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.3.2"
    	desc: "Ensure 'Choose how BitLocker-protected removable drives canbe recovered' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "RDVRecovery"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.3.3"
    	desc: "Ensure 'Choose how BitLocker-protected removable drives canbe recovered: Allow data recovery agent' is set to 'Enabled: True' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "RDVManageDRA"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.3.4"
    	desc: "Ensure 'Choose how BitLocker-protected removable drives canbe recovered: Recovery Password' is set to 'Enabled: Do not allow 48-digitrecovery password' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "RDVRecoveryPassword"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.3.5"
    	desc: "Ensure 'Choose how BitLocker-protected removable drives canbe recovered: Recovery Key' is set to 'Enabled: Do not allow 256-bit recovery key' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "RDVRecoveryKey"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.3.6"
    	desc: "Ensure 'Choose how BitLocker-protected removable drives canbe recovered: Omit recovery options from the BitLocker setup wizard' is set to 'Enabled: True' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "RDVHideRecoveryPage"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.3.7"
    	desc: "Ensure 'Choose how BitLocker-protected removable drives canbe recovered: Save BitLocker recovery information to AD DS for removable datadrives' is set to 'Enabled: False' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "RDVActiveDirectoryBackup"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.3.8"
    	desc: "Ensure 'Choose how BitLocker-protected removable drives canbe recovered: Configure storage of BitLocker recovery information to AD DS:' is set to 'Enabled: Backup recovery passwords and key packages' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "RDVActiveDirectoryInfoToStore"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.3.9"
    	desc: "Ensure 'Choose how BitLocker-protected removable drives canbe recovered: Do not enable BitLocker until recovery information is stored to ADDS for removable data drives' is set to 'Enabled: False' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "RDVRequireActiveDirectoryBackup"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.3.10"
    	desc: "Ensure 'Configure use of hardware-based encryption forremovable data drives' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "RDVHardwareEncryption"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.3.11"
    	desc: "Ensure 'Configure use of hardware-based encryption forremovable data drives: Use BitLocker software-based encryption when hardwareencryption is not available' is set to 'Enabled: True' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "RDVAllowSoftwareEncryptionFailover"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.3.12"
    	desc: "Ensure 'Configure use of hardware-based encryption forremovable data drives: Restrict encryption algorithms and cipher suites allowedfor hardware-based encryption' is set to 'Enabled: False' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "RDVRestrictHardwareEncryptionAlgorithms"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.3.13"
    	desc: "Ensure 'Configure use of hardware-based encryption forremovable data drives: Restrict crypto algorithms or cipher suites to thefollowing:' is set to 'Enabled: 2.16.840.1.101.3.4.1.2;2.16.840.1.101.3.4.1.42' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "RDVAllowedHardwareEncryptionAlgorithms"
		passed: if("%result% == '2.16.840.1.101.3.4.1.2;2.16.840.1.101.3.4.1.42'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.3.14"
    	desc: "Ensure 'Configure use of passwords for removable data drives' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "RDVPassphrase"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.3.15"
    	desc: "Ensure 'Configure use of smart cards on removable data drives' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "RDVAllowUserCert"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.3.16"
    	desc: "Ensure 'Configure use of smart cards on removable data drives:Require use of smart cards on removable data drives' is set to 'Enabled: True' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "RDVEnforceUserCert"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.3.17"
    	desc: "Ensure 'Deny write access to removable drives not protected byBitLocker' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Policies\Microsoft\FVE"
		value: "RDVDenyWriteAccess"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.3.18"
    	desc: "Ensure 'Deny write access to removable drives not protected byBitLocker: Do not allow write access to devices configured in anotherorganization' is set to 'Enabled: False' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "RDVDenyCrossOrg"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.11.4"
    	desc: "Ensure 'Disable new DMA devices when this computer is locked' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE"
		value: "DisableExternalDMAUnderLock"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.12.1-T"
    desc: "Check if template 'Camera.admx/adml ' is present."
    module: "IsGPTemplatePresent"
	templateName: "Camera.admx/adml "
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.12.1"
    	desc: "Ensure 'Allow Use of Camera' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Camera"
		value: "AllowCamera"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.9.13.1-T"
    desc: "Check if template 'CloudContent.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "CloudContent.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.13.1"
    	desc: "Ensure 'Turn off cloud optimized content' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\CloudContent"
		value: "DisableCloudOptimizedContent"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.13.2"
    	desc: "Ensure 'Turn off Microsoft consumer experiences' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\CloudContent"
		value: "DisableWindowsConsumerFeatures"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.14.1-T"
    desc: "Check if template 'WirelessDisplay.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "WirelessDisplay.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.14.1"
    	desc: "Ensure 'Require pin for pairing' is set to 'Enabled: First Time' OR'Enabled: Always' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Connect"
		value: "RequirePinForPairing"
		passed: if("%result% == '1' || %result% == '2'")
	},
},
{
	stepid: "18.9.15.1-T"
    desc: "Check if template 'CredUI.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "CredUI.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.15.1"
    	desc: "Ensure 'Do not display the password reveal button' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\CredUI"
		value: "DisablePasswordReveal"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.15.2"
    desc: "Ensure 'Enumerate administrator accounts on elevation' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\CredUI"
	value: "EnumerateAdministrators"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.15.3-T"
    desc: "Check if template 'CredUI.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "CredUI.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.15.3"
    	desc: "Ensure 'Prevent the use of security questions for local accounts' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\System"
		value: "NoLocalPasswordResetQuestions"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.16.1-T"
    desc: "Check if template 'DataCollection.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "DataCollection.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.16.1"
    	desc: "Ensure 'Allow Telemetry' is set to 'Enabled: 0 - Security [Enterprise Only]' or 'Enabled: 1 - Basic' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DataCollection"
		value: "AllowTelemetry"
		passed: if("%result% == '0' || %result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.16.2"
    	desc: "Ensure 'Configure Authenticated Proxy usage for the ConnectedUser Experience and Telemetry service' is set to 'Enabled: Disable AuthenticatedProxy usage' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DataCollection"
		value: "DisableEnterpriseAuthProxy"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.16.3-T"
    desc: "Check if template 'FeedbackNotifications.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "FeedbackNotifications.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.16.3"
    	desc: "Ensure 'Do not show feedback notifications' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DataCollection"
		value: "DoNotShowFeedbackNotifications"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.16.4-T"
    desc: "Check if template 'AllowBuildPreview.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "AllowBuildPreview.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.16.4"
    	desc: "Ensure 'Toggle user control over Insider builds' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\PreviewBuilds"
		value: "AllowBuildPreview"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.9.17.1-T"
    desc: "Check if template 'DeliveryOptimization.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "DeliveryOptimization.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.17.1"
    	desc: "Ensure 'Download Mode' is NOT set to 'Enabled: Internet' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DeliveryOptimization"
		value: "DODownloadMode"
		passed: if("%result% == '2'")
	},
},
{
	stepid: "18.9.26.1.1"
    desc: "Ensure 'Application: Control Event Log behavior when the log file reaches its maximum size' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\EventLog\Application"
	value: "Retention"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.26.1.2"
    desc: "Ensure 'Application: Specify the maximum log file size (KB)' is set to 'Enabled: 32,768 or greater' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\EventLog\Application"
	value: "MaxSize"
	passed: if("%result% >= '32768'")
},
{
	stepid: "18.9.26.2.1"
    desc: "Ensure 'Security: Control Event Log behavior when the log file reaches its maximum size' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\EventLog\Security"
	value: "Retention"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.26.2.2"
    desc: "Ensure 'Security: Specify the maximum log file size (KB)' is set to 'Enabled: 196,608 or greater' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\EventLog\Security"
	value: "MaxSize"
	passed: if("%result% >= '196608'")
},
{
	stepid: "18.9.26.3.1"
    desc: "Ensure 'Setup: Control Event Log behavior when the log file reaches its maximum size' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\EventLog\Setup"
	value: "Retention"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.26.3.2"
    desc: "Ensure 'Setup: Specify the maximum log file size (KB)' is set to 'Enabled: 32,768 or greater' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\EventLog\Setup"
	value: "MaxSize"
	passed: if("%result% >= '32768'")
},
{
	stepid: "18.9.26.4.1"
    desc: "Ensure 'System: Control Event Log behavior when the log file reaches its maximum size' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\EventLog\System"
	value: "Retention"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.26.4.2"
    desc: "Ensure 'System: Specify the maximum log file size (KB)' is set to 'Enabled: 32,768 or greater' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\EventLog\System"
	value: "MaxSize"
	passed: if("%result% >= '32768'")
},
{
	stepid: "18.9.30.2-T"
    desc: "Check if template 'Explorer.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "Explorer.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.30.2"
    	desc: "Ensure 'Turn off Data Execution Prevention for Explorer' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Explorer"
		value: "NoDataExecutionPrevention"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.9.30.3"
    desc: "Ensure 'Turn off heap termination on corruption' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Explorer"
	value: "NoHeapTerminationOnCorruption"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.30.4"
    desc: "Ensure 'Turn off shell protocol protected mode' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer"
	value: "PreXPSP2ShellProtocolBehavior"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.35.1-T"
    desc: "Check if template 'Sharing.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "Sharing.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.35.1"
    	desc: "Ensure 'Prevent the computer from joining a homegroup' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\HomeGroup"
		value: "DisableHomeGroup"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.39.1-T"
    desc: "Check if template 'Sensors.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "Sensors.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.39.1"
    	desc: "Ensure 'Turn off location' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors"
		value: "DisableLocation"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.43.1-T"
    desc: "Check if template 'Messaging.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "Messaging.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.43.1"
    	desc: "Ensure 'Allow Message Service Cloud Sync' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Messaging"
		value: "AllowMessageSync"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.9.44.1-T"
    desc: "Check if template 'MSAPolicy.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "MSAPolicy.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.44.1"
    	desc: "Ensure 'Block all consumer Microsoft account user authentication' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\MicrosoftAccount"
		value: "DisableUserAuth"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.45.3.1-T"
    desc: "Check if template 'WindowsDefender.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "WindowsDefender.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.3.1"
    	desc: "Ensure 'Configure local setting override for reporting to Microsoft MAPS' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet"
		value: "LocalSettingOverrideSpynetReporting"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.3.2"
    	desc: "Ensure 'Join Microsoft MAPS' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet"
		value: "SpynetReporting"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.4.1.1"
    	desc: "Ensure 'Configure Attack Surface Reduction rules' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Windows Defender Exploit Guard\ASR"
		value: "ExploitGuard_ASR_Rules"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.4.1.2-Key0"
    	desc: "Ensure 'Configure Attack Surface Reduction rules: Set the state for each ASR rule' is configured (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Windows Defender Exploit Guard\ASR\Rules"
		value: "26190899-1602-49e8-8b27-eb1d0a1ce869"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.4.1.2-Key1"
    	desc: "Ensure 'Configure Attack Surface Reduction rules: Set the state for each ASR rule' is configured (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Windows Defender Exploit Guard\ASR\Rules"
		value: "3b576869-a4ec-4529-8536-b80a7769e899"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.4.1.2-Key2"
    	desc: "Ensure 'Configure Attack Surface Reduction rules: Set the state for each ASR rule' is configured (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Windows Defender Exploit Guard\ASR\Rules"
		value: "5beb7efe-fd9a-4556-801d-275e5ffc04cc"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.4.1.2-Key3"
    	desc: "Ensure 'Configure Attack Surface Reduction rules: Set the state for each ASR rule' is configured (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Windows Defender Exploit Guard\ASR\Rules"
		value: "75668c1f-73b5-4cf0-bb93-3ecf5cb7cc84"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.4.1.2-Key4"
    	desc: "Ensure 'Configure Attack Surface Reduction rules: Set the state for each ASR rule' is configured (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Windows Defender Exploit Guard\ASR\Rules"
		value: "7674ba52-37eb-4a4f-a9a1-f0f9a1619a2c"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.4.1.2-Key5"
    	desc: "Ensure 'Configure Attack Surface Reduction rules: Set the state for each ASR rule' is configured (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Windows Defender Exploit Guard\ASR\Rules"
		value: "92e97fa1-2edf-4476-bdd6-9dd0b4dddc7b"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.4.1.2-Key6"
    	desc: "Ensure 'Configure Attack Surface Reduction rules: Set the state for each ASR rule' is configured (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Windows Defender Exploit Guard\ASR\Rules"
		value: "9e6c4e1f-7d60-472f-ba1a-a39ef669e4b2"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.4.1.2-Key7"
    	desc: "Ensure 'Configure Attack Surface Reduction rules: Set the state for each ASR rule' is configured (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Windows Defender Exploit Guard\ASR\Rules"
		value: "b2b3f03d-6a65-4f7b-a9c7-1c7ef74a9ba4"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.4.1.2-Key8"
    	desc: "Ensure 'Configure Attack Surface Reduction rules: Set the state for each ASR rule' is configured (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Windows Defender Exploit Guard\ASR\Rules"
		value: "be9ba2d9-53ea-4cdc-84e5-9b1eeee46550"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.4.1.2-Key9"
    	desc: "Ensure 'Configure Attack Surface Reduction rules: Set the state for each ASR rule' is configured (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Windows Defender Exploit Guard\ASR\Rules"
		value: "d3e037e1-3eb8-44c8-a917-57927947596d"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.4.1.2-Key10"
    	desc: "Ensure 'Configure Attack Surface Reduction rules: Set the state for each ASR rule' is configured (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Windows Defender Exploit Guard\ASR\Rules"
		value: "d4f940ab-401b-4efc-aadc-ad5f3c50688a"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.4.1.2-Key11"
    	desc: "Ensure 'Configure Attack Surface Reduction rules: Set the state for each ASR rule' is configured (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Windows Defender Exploit Guard\ASR\Rules"
		value: "e6db77e5-3df2-4cf1-b95a-636979351e5b"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.4.3.1"
    	desc: "Ensure 'Prevent users and apps from accessing dangerous websites' is set to 'Enabled: Block' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Windows Defender Exploit Guard\Network Protection"
		value: "EnableNetworkProtection"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.5.1"
    	desc: "Ensure 'Enable file hash computation feature' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\MpEngine"
		value: "EnableFileHashComputation"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.8.1"
    	desc: "Ensure 'Scan all downloaded files and attachments' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Real-Time Protection"
		value: "DisableIOAVProtection"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.8.2"
    	desc: "Ensure 'Turn off real-time protection' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Real-Time Protection"
		value: "DisableRealtimeMonitoring"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.8.3"
    	desc: "Ensure 'Turn on behavior monitoring' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Real-Time Protection"
		value: "DisableBehaviorMonitoring"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.10.1"
    	desc: "Ensure 'Configure Watson events' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Reporting"
		value: "DisableGenericRePorts"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.11.1"
    	desc: "Ensure 'Scan removable drives' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Scan"
		value: "DisableRemovableDriveScanning"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.45.11.2"
    	desc: "Ensure 'Turn on e-mail scanning' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Scan"
		value: "DisableEmailScanning"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.9.45.14"
    desc: "Ensure 'Configure detection for potentially unwantedapplications' is set to 'Enabled: Block' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender"
	value: "PUAProtection"
	passed: if("%result% == '1'")
},
{
	stepid: "18.9.45.15"
    desc: "Ensure 'Turn off Microsoft Defender AntiVirus' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender"
	value: "DisableAntiSpyware"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.46.1-T"
    desc: "Check if template 'AppHVSI.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "AppHVSI.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.46.1"
    	desc: "Ensure 'Allow auditing events in Microsoft Defender ApplicationGuard' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\AppHVSI"
		value: "AuditApplicationGuard"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.46.2"
    	desc: "Ensure 'Allow camera and microphone access in MicrosoftDefender Application Guard' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\AppHVSI"
		value: "AllowCameraMicrophoneRedirection"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.46.3"
    	desc: "Ensure 'Allow data persistence for Microsoft Defender ApplicationGuard' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\AppHVSI"
		value: "AllowPersistence"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.46.4"
    	desc: "Ensure 'Allow files to download and save to the host operatingsystem from Microsoft Defender Application Guard' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\AppHVSI"
		value: "SaveFilesToHost"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.46.5"
    	desc: "Ensure 'Configure Microsoft Defender Application Guard clipboardsettings: Clipboard behavior setting' is set to 'Enabled: Enable clipboard operationfrom an isolated session to the host' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\AppHVSI"
		value: "AppHVSIClipboardSettings"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.46.6"
    	desc: "Ensure 'Turn on Microsoft Defender Application Guard in ManagedMode' is set to 'Enabled: 1' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\AppHVSI"
		value: "AllowAppHVSI_ProviderSet"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.48.1-T"
    desc: "Check if template 'MicrosoftEdge.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "MicrosoftEdge.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.48.1"
    	desc: "Ensure 'Allow Address bar drop-down list suggestions' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\MicrosoftEdge\ServiceUI"
		value: "ShowOneBox"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.48.2"
    	desc: "Ensure 'Allow Adobe Flash' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Addons"
		value: "FlashPlayerEnabled"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.48.3"
    	desc: "Ensure 'Allow InPrivate Browsing' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Main"
		value: "AllowInPrivate"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.48.4"
    	desc: "Ensure 'Allow Sideloading of extension' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Extensions"
		value: "AllowSideloadingOfExtensions"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.48.5"
    	desc: "Ensure 'Configure cookies' is set to 'Enabled: Block only 3rd-party cookies' or higher (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Main"
		value: "Cookies"
		passed: if("%result% == '0' || %result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.48.6"
    	desc: "Ensure 'Configure Password Manager' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Main"
		value: "FormSuggest Passwords"
		passed: if("%result% == 'no'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.48.7"
    	desc: "Ensure 'Configure Pop-up Blocker' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Main"
		value: "AllowPopups"
		passed: if("%result% == 'yes'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.48.8"
    	desc: "Ensure 'Configure search suggestions in Address bar' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\MicrosoftEdge\SearchScopes"
		value: "ShowSearchSuggestionsGlobal"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.48.9"
    	desc: "Ensure 'Configure the Adobe Flash Click-to-Run setting' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Security"
		value: "FlashClickToRunMode"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.48.10"
    	desc: "Ensure 'Prevent access to the about:flags page in Microsoft Edge' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Main"
		value: "PreventAccessToAboutFlagsInMicrosoftEdge"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.48.11"
    	desc: "Ensure 'Prevent bypassing Windows Defender SmartScreen prompts for files' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\MicrosoftEdge\PhishingFilter"
		value: "PreventOverrideAppRepUnknown"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.48.12"
    	desc: "Ensure 'Prevent certificate error overrides' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Internet Settings"
		value: "PreventCertErrorOverrides"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.48.13"
    	desc: "Ensure 'Prevent using Localhost IP address for WebRTC' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Main"
		value: "HideLocalHostIP"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.55.1-T"
    desc: "Check if template 'SkyDrive.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "SkyDrive.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.55.1"
    	desc: "Ensure 'Prevent the usage of OneDrive for file storage' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\OneDrive"
		value: "DisableFileSyncNGSC"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.61.1-T"
    desc: "Check if template 'PushToInstall.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "PushToInstall.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.61.1"
    	desc: "Ensure 'Turn off Push To Install service' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\PushToInstall"
		value: "DisablePushToInstall"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.62.2.2"
    desc: "Ensure 'Do not allow passwords to be saved' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
	value: "DisablePasswordSaving"
	passed: if("%result% == '1'")
},
{
	stepid: "18.9.62.3.2.1"
    desc: "Ensure 'Allow users to connect remotely by using RemoteDesktop Services' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
	value: "fDenyTSConnections"
	passed: if("%result% == '1'")
},
{
	stepid: "18.9.62.3.3.1"
    desc: "Ensure 'Do not allow COM port redirection' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
	value: "fDisableCcm"
	passed: if("%result% == '1'")
},
{
	stepid: "18.9.62.3.3.2"
    desc: "Ensure 'Do not allow drive redirection' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
	value: "fDisableCdm"
	passed: if("%result% == '1'")
},
{
	stepid: "18.9.62.3.3.3"
    desc: "Ensure 'Do not allow LPT port redirection' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
	value: "fDisableLPT"
	passed: if("%result% == '1'")
},
{
	stepid: "18.9.62.3.3.4"
    desc: "Ensure 'Do not allow supported Plug and Play deviceredirection' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
	value: "fDisablePNPRedir"
	passed: if("%result% == '1'")
},
{
	stepid: "18.9.62.3.9.1"
    desc: "Ensure 'Always prompt for password upon connection' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
	value: "fPromptForPassword"
	passed: if("%result% == '1'")
},
{
	stepid: "18.9.62.3.9.2"
    desc: "Ensure 'Require secure RPC communication' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
	value: "fEncryptRPCTraffic"
	passed: if("%result% == '1'")
},
{
	stepid: "18.9.62.3.9.3"
    desc: "Ensure 'Require use of specific security layer for remote (RDP) connections' is set to 'Enabled: SSL' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
	value: "SecurityLayer"
	passed: if("%result% == '2'")
},
{
	stepid: "18.9.62.3.9.4"
    desc: "Ensure 'Require user authentication for remote connections by using Network Level Authentication' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
	value: "UserAuthentication"
	passed: if("%result% == '1'")
},
{
	stepid: "18.9.62.3.9.5"
    desc: "Ensure 'Set client connection encryption level' is set to 'Enabled: High Level' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
	value: "MinEncryptionLevel"
	passed: if("%result% == '3'")
},
{
	stepid: "18.9.62.3.10.1"
    desc: "Ensure 'Set time limit for active but idle Remote DesktopServices sessions' is set to 'Enabled: 15 minutes or less, but not Never (0)' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
	value: "MaxIdleTime"
	passed: if("'0' < %result% && %result% <= '900000'")
},
{
	stepid: "18.9.62.3.10.2"
    desc: "Ensure 'Set time limit for disconnected sessions' is set to 'Enabled: 1 minute' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
	value: "MaxDisconnectionTime"
	passed: if("%result% == '60000'")
},
{
	stepid: "18.9.62.3.11.1"
    desc: "Ensure 'Do not delete temp folders upon exit' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
	value: "DeleteTempDirsOnExit"
	passed: if("%result% == '1'")
},
{
	stepid: "18.9.63.1"
    desc: "Ensure 'Prevent downloading of enclosures' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Internet Explorer\Feeds"
	value: "DisableEnclosureDownload"
	passed: if("%result% == '1'")
},
{
	stepid: "18.9.64.2-T"
    desc: "Check if template 'Search.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "Search.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.64.2"
    	desc: "Ensure 'Allow Cloud Search' is set to 'Enabled: Disable CloudSearch' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Windows Search"
		value: "AllowCloudSearch"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.64.3"
    	desc: "Ensure 'Allow Cortana' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Windows Search"
		value: "AllowCortana"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.64.4"
    	desc: "Ensure 'Allow Cortana above lock screen' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Windows Search"
		value: "AllowCortanaAboveLock"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.9.64.5"
    desc: "Ensure 'Allow indexing of encrypted files' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Windows Search"
	value: "AllowIndexingEncryptedStoresOrItems"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.64.6-T"
    desc: "Check if template 'Search.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "Search.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.64.6"
    	desc: "Ensure 'Allow search and Cortana to use location' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Windows Search"
		value: "AllowSearchToUseLocation"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.9.69.1-T"
    desc: "Check if template 'AVSValidationGP.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "AVSValidationGP.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.69.1"
    	desc: "Ensure 'Turn off KMS Client Online AVS Validation' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\CurrentVersion\Software Protection Platform"
		value: "NoGenTicket"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.72.1-T"
    desc: "Check if template 'WindowsStore.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "WindowsStore.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.72.1"
    	desc: "Ensure 'Disable all apps from Microsoft Store' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsStore"
		value: "DisableStoreApps"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.72.2"
    	desc: "Ensure 'Only display the private store within the Microsoft Store' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsStore"
		value: "RequirePrivateStoreOnly"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.72.3-T"
    desc: "Check if template 'WindowsStore.admx/adml OR WinStoreUI.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "WindowsStore.admx/adml OR WinStoreUI.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.72.3"
    	desc: "Ensure 'Turn off Automatic Download and Install of updates' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsStore"
		value: "AutoDownload"
		passed: if("%result% == '4'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.72.4"
    	desc: "Ensure 'Turn off the offer to update to the latest version of Windows' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsStore"
		value: "DisableOSUpgrade"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.72.5"
    	desc: "Ensure 'Turn off the Store application' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsStore"
		value: "RemoveWindowsStore"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.80.1.1-T"
    desc: "Check if template 'WindowsExplorer.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "WindowsExplorer.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.80.1.1-Key0"
    	desc: "Ensure 'Configure Windows Defender SmartScreen' is set to 'Enabled: Warn and prevent bypass' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\System"
		value: "EnableSmartScreen"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.80.1.1-Key1"
    	desc: "Ensure 'Configure Windows Defender SmartScreen' is set to 'Enabled: Warn and prevent bypass' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\System"
		value: "ShellSmartScreenLevel"
		passed: if("%result% == 'Block'")
	},
},
{
	stepid: "18.9.80.2.1-T"
    desc: "Check if template 'MicrosoftEdge.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "MicrosoftEdge.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.80.2.1"
    	desc: "Ensure 'Configure Windows Defender SmartScreen' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\MicrosoftEdge\PhishingFilter"
		value: "EnabledV9"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.80.2.2"
    	desc: "Ensure 'Prevent bypassing Windows Defender SmartScreen prompts for sites' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\MicrosoftEdge\PhishingFilter"
		value: "PreventOverride"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.82.1-T"
    desc: "Check if template 'GameDVR.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "GameDVR.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.82.1"
    	desc: "Ensure 'Enables or disables Windows Game Recording and Broadcasting' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\GameDVR"
		value: "AllowGameDVR"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.9.84.1-T"
    desc: "Check if template 'WindowsInkWorkspace.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "WindowsInkWorkspace.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.84.1"
    	desc: "Ensure 'Allow suggested apps in Windows Ink Workspace' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsInkWorkspace"
		value: "AllowSuggestedAppsInWindowsInkWorkspace"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.84.2"
    	desc: "Ensure 'Allow Windows Ink Workspace' is set to 'Enabled: On, but disallow access above lock' OR 'Disabled' but not 'Enabled: On' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\WindowsInkWorkspace"
		value: "AllowWindowsInkWorkspace"
		passed: if("%result% == '0' || %result% == '1'")
	},
},
{
	stepid: "18.9.85.1"
    desc: "Ensure 'Allow user control over installs' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Installer"
	value: "EnableUserControl"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.85.2"
    desc: "Ensure 'Always install with elevated privileges' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Installer"
	value: "AlwaysInstallElevated"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.85.3"
    desc: "Ensure 'Prevent Internet Explorer security prompt for WindowsInstaller scripts' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Installer"
	value: "SafeForScripting"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.86.1"
    desc: "Ensure 'Sign-in and lock last interactive user automatically after a restart' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
	value: "DisableAutomaticRestartSignOn"
	passed: if("%result% == '1'")
},
{
	stepid: "18.9.95.1-T"
    desc: "Check if template 'PowerShellExecutionPolicy.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "PowerShellExecutionPolicy.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.95.1"
    	desc: "Ensure 'Turn on PowerShell Script Block Logging' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging"
		value: "EnableScriptBlockLogging"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.95.2"
    	desc: "Ensure 'Turn on PowerShell Transcription' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\PowerShell\Transcription"
		value: "EnableTranscripting"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.9.97.1.1"
    desc: "Ensure 'Allow Basic authentication' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WinRM\Client"
	value: "AllowBasic"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.97.1.2"
    desc: "Ensure 'Allow unencrypted traffic' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WinRM\Client"
	value: "AllowUnencryptedTraffic"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.97.1.3"
    desc: "Ensure 'Disallow Digest authentication' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WinRM\Client"
	value: "AllowDigest"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.97.2.1"
    desc: "Ensure 'Allow Basic authentication' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service"
	value: "AllowBasic"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.97.2.2"
    desc: "Ensure 'Allow remote server management through WinRM' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service"
	value: "AllowAutoConfig"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.97.2.3"
    desc: "Ensure 'Allow unencrypted traffic' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service"
	value: "AllowUnencryptedTraffic"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.97.2.4-T"
    desc: "Check if template 'WindowsRemoteManagement.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "WindowsRemoteManagement.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.97.2.4"
    	desc: "Ensure 'Disallow WinRM from storing RunAs credentials' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service"
		value: "DisableRunAs"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.98.1"
    desc: "Ensure 'Allow Remote Shell Access' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service\WinRS"
	value: "AllowRemoteShellAccess"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.99.2.1-T"
    desc: "Check if template 'WindowsDefenderSecurityCenter.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "WindowsDefenderSecurityCenter.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.99.2.1"
    	desc: "Ensure 'Prevent users from modifying settings' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender Security Center\App and Browser protection"
		value: "DisallowExploitProtectionOverride"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "18.9.102.1.1-T"
    desc: "Check if template 'WindowsUpdate.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "WindowsUpdate.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.102.1.1-Key0"
    	desc: "Ensure 'Manage preview builds' is set to 'Enabled: Disable preview builds' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"
		value: "ManagePreviewBuilds"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.102.1.1-Key1"
    	desc: "Ensure 'Manage preview builds' is set to 'Enabled: Disable preview builds' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"
		value: "ManagePreviewBuildsPolicyValue"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.102.1.2-Key0"
    	desc: "Ensure 'Select when Preview Builds and Feature Updates are received' is set to 'Enabled: Semi-Annual Channel, 180 or more days' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"
		value: "DeferFeatureUpdates"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.102.1.2-Key1"
    	desc: "Ensure 'Select when Preview Builds and Feature Updates are received' is set to 'Enabled: Semi-Annual Channel, 180 or more days' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"
		value: "BranchReadinessLevel"
		passed: if("%result% == '16'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.102.1.2-Key2"
    	desc: "Ensure 'Select when Preview Builds and Feature Updates are received' is set to 'Enabled: Semi-Annual Channel, 180 or more days' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"
		value: "DeferFeatureUpdatesPeriodInDays"
		passed: if("%result% >= 180")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.102.1.3-Key0"
    	desc: "Ensure 'Select when Quality Updates are received' is set to 'Enabled: 0 days' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"
		value: "DeferQualityUpdates"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "18.9.102.1.3-Key1"
    	desc: "Ensure 'Select when Quality Updates are received' is set to 'Enabled: 0 days' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"
		value: "DeferQualityUpdatesPeriodInDays"
		passed: if("%result% == '0'")
	},
},
{
	stepid: "18.9.102.2"
    desc: "Ensure 'Configure Automatic Updates' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU"
	value: "NoAutoUpdate"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.102.3"
    desc: "Ensure 'Configure Automatic Updates: Scheduled install day' is set to '0 - Every day' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU"
	value: "ScheduledInstallDay"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.102.4"
    desc: "Ensure 'No auto-restart with logged on users for scheduled automatic updates installations' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU"
	value: "NoAutoRebootWithLoggedOnUsers"
	passed: if("%result% == '0'")
},
{
	stepid: "18.9.102.5-T"
    desc: "Check if template 'WindowsUpdate.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "WindowsUpdate.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "18.9.102.5"
    	desc: "Ensure 'Remove access to �Pause updates� feature' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"
		value: "SetDisablePauseUXAccess"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "19.1.3.1-T"
    desc: "Check if template 'ControlPanelDisplay.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "ControlPanelDisplay.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "19.1.3.1"
    	desc: "Ensure 'Enable screen saver' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_USERS\%g_userSID%\Software\Policies\Microsoft\Windows\Control Panel\Desktop"
		value: "ScreenSaveActive"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "19.1.3.2"
    desc: "Ensure 'Password protect the screen saver' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_USERS\%g_userSID%\Software\Policies\Microsoft\Windows\Control Panel\Desktop"
	value: "ScreenSaverIsSecure"
	passed: if("%result% == '1'")
},
{
	stepid: "19.1.3.3-T"
    desc: "Check if template 'ControlPanelDisplay.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "ControlPanelDisplay.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "19.1.3.3"
    	desc: "Ensure 'Screen saver timeout' is set to 'Enabled: 900 seconds or fewer, but not 0' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_USERS\%g_userSID%\Software\Policies\Microsoft\Windows\Control Panel\Desktop"
		value: "ScreenSaveTimeOut"
		passed: if("'0' < %result% && %result% <= '900'")
	},
},
{
	stepid: "19.5.1.1-T"
    desc: "Check if template 'WPN.admx/adml ' is present."
    module: "IsGPTemplatePresent"
	templateName: "WPN.admx/adml "
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "19.5.1.1"
    	desc: "Ensure 'Turn off toast notifications on the lock screen' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_USERS\%g_userSID%\Software\Policies\Microsoft\Windows\CurrentVersion\PushNotifications"
		value: "NoToastApplicationNotificationOnLockScreen"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "19.6.6.1.1"
    desc: "Ensure 'Turn off Help Experience Improvement Program' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_USERS\%g_userSID%\Software\Policies\Microsoft\Assistance\Client\1.0"
	value: "NoImplicitFeedback"
	passed: if("%result% == '1'")
},
{
	stepid: "19.7.4.1"
    desc: "Ensure 'Do not preserve zone information in file attachments' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_USERS\%g_userSID%\Software\Microsoft\Windows\CurrentVersion\Policies\Attachments"
	value: "SaveZoneInformation"
	passed: if("%result% == '0'")
},
{
	stepid: "19.7.4.2"
    desc: "Ensure 'Notify antivirus programs when opening attachments' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_USERS\%g_userSID%\Software\Microsoft\Windows\CurrentVersion\Policies\Attachments"
	value: "ScanWithAntiVirus"
	passed: if("%result% == '1'")
},
{
	stepid: "19.7.8.1-T"
    desc: "Check if template 'CloudContent.admx/adml' is present."
    module: "IsGPTemplatePresent"
	templateName: "CloudContent.admx/adml"
	
	passed: if("%result%")
	%templatePresent% = %passed%

	{
		condition: if("%templatePresent%")
		stepid: "19.7.8.1"
    	desc: "Ensure 'Configure Windows spotlight on lock screen' is set to 'Disabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_USERS\%g_userSID%\Software\Policies\Microsoft\Windows\CloudContent"
		value: "ConfigureWindowsSpotlight"
		passed: if("%result% == '0'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "19.7.8.2"
    	desc: "Ensure 'Do not suggest third-party content in Windows spotlight' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_USERS\%g_userSID%\Software\Policies\Microsoft\Windows\CloudContent"
		value: "DisableThirdPartySuggestions"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "19.7.8.3"
    	desc: "Ensure 'Do not use diagnostic data for tailored experiences' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_USERS\%g_userSID%\Software\Policies\Microsoft\Windows\CloudContent"
		value: "DisableTailoredExperiencesWithDiagnosticData"
		passed: if("%result% == '1'")
	},
	{
		condition: if("%templatePresent%")
		stepid: "19.7.8.4"
    	desc: "Ensure 'Turn off all Windows spotlight features' is set to 'Enabled' (Automated)"
    	module: "RegistryQuery"

		key: "HKEY_USERS\%g_userSID%\Software\Policies\Microsoft\Windows\CloudContent"
		value: "DisableWindowsSpotlightFeatures"
		passed: if("%result% == '1'")
	},
},
{
	stepid: "19.7.28.1"
    desc: "Ensure 'Prevent users from sharing files within their profile.' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_USERS\%g_userSID%\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer"
	value: "NoInplaceSharing"
	passed: if("%result% == '1'")
},
{
	stepid: "19.7.43.1"
    desc: "Ensure 'Always install with elevated privileges' is set to 'Disabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_USERS\%g_userSID%\Software\Policies\Microsoft\Windows\Installer"
	value: "AlwaysInstallElevated"
	passed: if("%result% == '0'")
},
{
	stepid: "19.7.47.2.1"
    desc: "Ensure 'Prevent Codec Download' is set to 'Enabled' (Automated)"
    module: "RegistryQuery"

	key: "HKEY_USERS\%g_userSID%\Software\Policies\Microsoft\WindowsMediaPlayer"
	value: "PreventCodecDownload"
	passed: if("%result% == '1'")
},

